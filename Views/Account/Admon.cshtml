@{
  ViewData["Title"] = "Account Management";
}

@section css {
  <style>
    .error {
      color: red;
    }
    .Required{
      color: red;
      font-weight: bold;
    }
    .btn-dark-green {
      background-color: #217346;
      border-color: #217346;
      color: white;
      margin-left: 18px;
    }

    .btn-dark-green:hover {
      background-color: #1e623d;
      border-color: #1e623d;
      color: white;
    }
  </style>
}

<div id="Alert">

</div>

<div class="card">
  <div class="card-body">
    <div class="table-responsive scrollbar">
      <div class="m-3">
        <button type="button" class="btn btn-success btn-sm" id="AddAccount"><svg xmlns="http://www.w3.org/2000/svg"
            width="20" height="20" fill="currentColor" class="bi bi-person-fill-add" viewBox="0 0 16 16">
            <path
              d="M12.5 16a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7m.5-5v1h1a.5.5 0 0 1 0 1h-1v1a.5.5 0 0 1-1 0v-1h-1a.5.5 0 0 10-1h1v-1a.5.5 0 0 1 1 0m-2-6a3 3 0 1 1-6 0 3 3 0 0 1 6 0" />
            <path
              d="M2 13c0 1 1 1 1 1h5.256A4.5 4.5 0 0 1 8 12.5a4.5 4.5 0 0 1 1.544-3.393Q8.844 9.002 8 9c-5 0-6 3-6 4" />
          </svg>
          Account
        </button>
      </div>
      <table class="table table-sm table-responsive table-striped table-hover display dataTable nowrap" id="tmain">
        <thead>
          <tr>
            <th>Usuario</th>
            <th>Nombre</th>
            <th>Apellido Paterno</th>
            <th>Apellido Materno</th>
            <th>Correo</th>
            <th>Numero</th>
            <th>Descripcion</th>
            <th>Estatus</th>
            <th>Fecha</th>
            <th>Acciones</th>
          </tr>
        </thead>
        <tbody>
        </tbody>
      </table>
    </div>
  </div>
</div>
@* <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
<h1 class="h2">Cuentas de Usarios</h1>

<div class="btn-toolbar mb-2 mb-md-0">

<div class="btn-group me-2 ">

<div class="dropdown">
<button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle" id="exportDropdown"
data-bs-toggle="dropdown" aria-expanded="false">Exportar</button>
<ul class="dropdown-menu" aria-labelledby="exportDropdown">
<li><a class="dropdown-item" href="#" id="exportExcel">Exportar a Excel</a></li>
<li><a class="dropdown-item" href="#" id="exportCSV">Exportar a CSV</a></li>
<li><a class="dropdown-item" href="#" id="exportCopy">Copiar al Portapapeles</a></li>
<li><a class="dropdown-item" href="#" id="exportPDF">Exportar a PDF</a></li>
<li><a class="dropdown-item" href="#" id="exportPrint">Imprimir</a></li>
</ul>
</div>

</div>
<button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle d-flex align-items-center gap-1">
<svg class="bi">
<use xlink:href="#calendar3" />
</svg>
This week
</button>
</div>

</div>


<div class="table-responsive small">
<div class="m-3">
<button type="button" class="btn btn-success btn-sm" id="AddAccount"><svg xmlns="http://www.w3.org/2000/svg"
width="20" height="20" fill="currentColor" class="bi bi-person-fill-add" viewBox="0 0 16 16">
<path
d="M12.5 16a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7m.5-5v1h1a.5.5 0 0 1 0 1h-1v1a.5.5 0 0 1-1 0v-1h-1a.5.5 0 0 1
0-1h1v-1a.5.5 0 0 1 1 0m-2-6a3 3 0 1 1-6 0 3 3 0 0 1 6 0" />
<path
d="M2 13c0 1 1 1 1 1h5.256A4.5 4.5 0 0 1 8 12.5a4.5 4.5 0 0 1 1.544-3.393Q8.844 9.002 8 9c-5 0-6 3-6 4" />
</svg> Account</button>
</div>
<table class="table table-striped table-hover display nowrap" id="tmain">
<thead>
<tr>
<th>#</th>
<th>Usuario</th>
<th>Nombre</th>
<th>Segundo Nombre</th>
<th>Apellido</th>
<th>Correo</th>
<th>Numero</th>
<th>Descripcion</th>
<th>Estatus</th>
<th>Fecha</th>
<th>Acciones</th>
</tr>
</thead>
<tbody>

</tbody>
</table>
</div>
</main>
</div>
</div> *@

<div class="modal" tabindex="-1" id="modalFinal" data-bs-backdrop="static" data-bs-keyboard="false"
  aria-labelledby="staticBackdropLabel" aria-hidden="true">
  <div class="modal-dialog ">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Datos Personales</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form class="row g-3 needs-validation" novalidate id="Form">
          <div class="col-md-6">
            <input type="hidden" id="id_account">
            <label for="validationCustom01" class="form-label">Nombre  <span class="Required">*</span></label>
            <input placeholder="Escribe tu nombre" type="text" class="form-control" name="nombre" id="nombre" value="" required>

          </div>
          <div class="col-md-6">
            <label for="validationCustom02" class="form-label">Apellido Paterno <span class="Required">*</span></label>
            <input placeholder="Escribe tu Apellido Paterno" type="text" class="form-control" name="inicial" id="inicial" value="" required>

          </div>
          <div class="col-md-6">
            <label for="validationCustom02" class="form-label">Apellido Materno  <span class="Required">*</span></label>
            <input placeholder="Escribe tu Apellido Materno"  type="text" class="form-control" name="apellido" id="apellido" value="" required>

          </div>
          
          <div class="col-md-6">
            <label for="validationCustom04" class="form-label">Perfil</label>
            <select class="form-select" id="ListProfile" required>
              <option value="-1">Seleccione</option>
            </select>
            <div class="invalid-feedback">
              Selecciona un perfil
            </div>
          </div>
          <div class="col-md-6">
            <label for="validationCustom02" class="form-label">Telefono  <span class="Required">*</span></label>
            <input placeholder="Escribe tu telefono"  type="text" class="form-control" name="number" id="number" value="" required>

          </div>
          <div class="col-md-6">
            <label for="validationCustom02" class="form-label">Correo  <span class="Required">*</span></label>
            <input placeholder="Escribe tu correo electrónico"  type="email" class="form-control" name="email" id="EmailAddress" value="" required>


          </div>
          <div class="col-md-6" id="divPass">
            <label for="validationCustom02" class="form-label">Contraseña  <span class="Required">*</span></label>
            <input placeholder="Escribe tu contraseña"  type="password" class="form-control" name="pass" id="pass" value="" required>
          </div>
          <div class="modal-footer">
            <div id="group_btn">

            </div>
            <button class="btn btn-primary" type="submit" id="SaveAccount">Continue</button>

          </div>
        </form>

      </div>


    </div>
  </div>
</div>
<!--MODAL PARA CAMBIO DE CONTRASEÑA-->
<div class="modal" tabindex="-1" id="ModalCambio">
  <div class="modal-dialog modal-sm">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Account</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="FormCambio">
          <div class="form-group" id="information">
            <input type="hidden" id="id_account" />
            <label>Contraseña</label>
            <input type="password" class="form-control" name="passChange" id="passChange" />
            <label>Validar Contraseña</label>
            <input type="password" class="form-control" id="passVerify" name="passVerify" />
          </div>
        </form>

      </div>

      <div class="modal-footer">
        <div id="group_btn">

        </div>

        <button type="button" class="btn btn-primary" id="ChangePassword">Continue</button>

      </div>
    </div>
  </div>
</div>

@section JS {

  <script>
    $(function () {
      limpiarFormulario();
      limpiarFormPass();
      $(document).ready(function () {
        $.validator.addMethod("noNumeric", function (value, element) {
          return this.optional(element) || !/\d/.test(value);
        }, "Por favor, no ingrese caracteres numéricos.");

        $("#Form").validate({
          rules: {
            nombre: {

              minlength: 3
            },
            inicial: {
              noNumeric: true
            },
            apellido: {

              minlength: 3
            },
            user: {

              minlength: 3
            },
            email: {

              email: true
            },
            number: {
              number: true,
              minlength: 10,
              maxlength: 12
            },
            pass: {
              required: true,
              minlength: 8,
              maxlength: 16
            }

          },
          messages: {
            nombre: {
              required: "Por favor, ingrese su nombre.",
              minlength: "El nombre debe tener al menos 3 caracteres."
            },
            inicial: {
              required: "Por favor, ingrese su inicial.",
              noNumeric: "Por favor, no ingrese caracteres numéricos."
            },
            perfiles: {
              required: "Por favor, seleccione un perfil.",
              min: "Por favor, seleccione un perfil válido."
            },
            apellido: {
              required: "Por favor, ingrese su apellido.",
              minlength: "El apellido debe tener al menos 3 caracteres."
            },
            user: {
              required: "Por favor, ingrese un nombre de usuario.",
              minlength: "El nombre de usuario debe tener al menos 3 caracteres."
            },
            email: {
              email: "Por favor, ingrese un correo electrónico válido."
            },
            number: {
              number: "Por favor, ingrese un número válido.",
              minlength: "El número debe tener al menos 10 dígitos.",
              maxlength: "El número debe tener máximo 12 dígitos."
            },
            pass: {
              required: "Por favor, ingrese una contraseña.",
              minlength: "La contraseña debe tener al menos 8 caracteres.",
              maxlength: "La contraseña debe tener máximo 16 caracteres."
            }
          }
        });

      })


      cargarAccount();
      $("#ChangePassword").click(() => {
        var AccountID = $("#id_account").val();
        var AcPassword = $("#passChange").val();
        var PassVerify = $("#passVerify").val();
        if (PassVerify != AcPassword) {
          mostrarToast("Atencion", "Las contraseñas no coinciden", "failed");
          return;
        }
        const data_changePassword = {

          AccountID: AccountID,
          AcPassword: AcPassword

        };
        console.log(data_changePassword);
        $.ajax({
          url: "/Account/ChangePass",
          data: data_changePassword,
          type: "POST",


          beforeSend: () => {
          },
          success: (res) => {
            if (res.ok) {

              $("#ModalCambio").modal("hide");

              mostrarToast("Exito", res.message, "success");
              cargarAccount();
              limpiarFormulario();
              limpiarFormPass();
            } else {
              mostrarToast("Error", res.message, "error");
            }
          },
          error: () => {
            alert("Ocurrió un error interno, por favor inténtalo más tarde");
          }
        });

      });
 
      $("#AddAccount").click(() => {
        cargarProfile();
        limpiarFormulario();
        console.log("account loaded");
        $("#group_btn").hide();
        $("#divPass").show();
        $("#modalFinal").modal("show");

      });
      (() => {
        'use strict';
        const forms = document.querySelectorAll('.needs-validation');

        Array.from(forms).forEach(form => {
          form.addEventListener('submit', event => {
            event.preventDefault();
            if (!form.checkValidity()) {
              event.stopPropagation();
              console.log("Error, campos no llenados");
            } else {
              const data_account = {
                accountVM: {
                  accountID: $("#id_account").val() || 0,
                  profileID: $("#ListProfile").val(),
                  AcUser: $("#EmailAddress").val(),
                  AcEmailAddress: $("#EmailAddress").val(),
                  acPhoneNumber: $("#number").val(),
                  acPassword: $("#pass").val(),
                  acStatus: "Pendiente",
                  acRDate: "",
                  peopleID: $("#id_people_").val() || 0,
                  peFirstName: $("#nombre").val(),
                  peMiddleInitial: $("#inicial").val(),
                  peLastName: $("#apellido").val(),
                  peStatus: "Pendiente",
                  peRDate: "",
                  peStreet: "",
                  peOutsideCode: "",
                  peInsideCode: "",
                  settlementID: 0
                }
              };

              console.log(data_account);

              $.ajax({
                url: "/Account/AddUpdate",
                data: data_account,
                type: "POST",
                beforeSend: () => { },
                success: (res) => {
                  if (res.ok) {
                    $("#modalFinal").modal("hide");
                    console.log(res.data);
                    mostrarToast("Exito!!", res.message, "success");
                    cargarAccount();
                    limpiarFormulario();
                    resetValidation(form);
                  } else {
                    mostrarToast("Error", res.message, "Error");

                  }
                },
                error: () => {
                  alert("Ocurrió un error interno, por favor inténtalo más tarde");
                }
              });
            }
            form.classList.add('was-validated');
          }, false);
        });
      })();


    });

    function cargarProfile() {
      $.ajax({
        url: "/Profiles/List",
        type: "POST",
        
        beforeSend: () => { },
        success: (res) => {
          if (res.ok) {
            console.log(res.data);
            let html = `<option value="-1">Seleccione</option>`;
            $.each(res.data, (index, value) => {
              html += `<option value="${value.profileID}">${value.proDescription}</option>`;
            });
            $("#ListProfile").html(html);
          } else {
            mostrarToast("ALERTA!!", res.message, "alert");
          }
        },
        error: () => {
          alert("Ocurrió un error interno, por favor inténtalo más tarde");
        }
      });
    }

    function cargarAccount() {
      $.ajax({
        url: "/Account/List",
        type: "POST",
        beforeSend: () => { },
        success: (res) => {
          if (res.ok) {
            console.log(res.data);
            LlenarTabla(res.data);
          } else {
            mostrarToast("ALERTA!!", res.message, "alert");
          }
        },
        error: () => {
          alert("Ocurrió un error interno, por favor inténtalo más tarde");
        }
      });
    }
    var tabla;
    function LlenarTabla(lista) {
      if ($.fn.DataTable.isDataTable("#tmain")) {
        $("#tmain").DataTable().destroy();
      }

      $("#tmain tbody").remove();

      tabla = $("#tmain").DataTable({
        responsive: true,
        data: lista,
        columns: [
          { data: "acUser" },
          { data: "peFirstName" },
          { data: "peMiddleInitial" },
          { data: "peLastName" },
          { data: "acEmailAddress" },
          { data: "acPhoneNumber" },
          { data: "proDescription" },
          { data: "acStatus" },
          { data: "acRDate" },
          {
            data: "accountID",
            render: (value, type, row) => {
              return `<td class="text-end">
          <div class="dropdown font-sans-serif position-static"><button class="btn btn-link text-600 btn-sm dropdown-toggle btn-reveal" type="button" data-bs-toggle="dropdown" data-boundary="window" aria-haspopup="true" aria-expanded="false"><span class="fas fa-ellipsis-h fs-10"></span></button>
              <div class="dropdown-menu dropdown-menu-end border py-0">
                <div class="py-2"><a class="dropdown-item" onclick="ShowModalEdit(${value});" href="#">Edit</a><a class="dropdown-item text-danger" href="#!">Delete</a></div>
              </div>
            </div>
          </td>`;
            }
          },
          {
            data: "acStatus",
            render: (value, type, row) => {
              if (value == "Pendiente") {
                return `<button type='button' class='btn btn-success m-1' onclick="Activate(${row.accountID});">Activate</button>
                                                      <input type='hidden' id='id_people_' value='0' />`;
              } else {
                return ``;
              }
            }
          }
        ],
        language: {
          url: 'https://cdn.datatables.net/plug-ins/1.10.24/i18n/Spanish.json'
        },
        dom: 'Bfrtip',
        buttons: [
          {
            extend: 'excelHtml5',
            text: '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-file-earmark-excel" viewBox="0 0 16 16"><path d="M5.884 6.68 8 8.8l2.116-2.12 1.768 1.764L9.768 10.56 12 12.8l-2.232 2.236L8 13.72l-2.116 2.12-1.768-1.764L6.232 10.56 4 8.32l2.232-2.236 1.652 1.596zm6.16-1.78 1.48-1.48a.5.5 0 0 1 .7 0 .5.5 0 0 1 0 .7l-1.48 1.48L8 13.8 4 9.8l4-4L12.04 6.9zm.86-1.32a.5.5 0 0 1 0-.7l1.48-1.48a.5.5 0 0 1 .7 0 .5.5 0 0 1 0 .7l-1.48 1.48-1.48 1.48a.5.5 0 0 1-.7 0 .5.5 0 0 1 0-.7l1.48-1.48-1.48-1.48z"/></svg> Excel',
            className: 'btn btn-dark-green btn-sm',
            title: 'Tabla Account',
            action: function (e, dt, button, config) {
              $.fn.dataTable.ext.buttons.excelHtml5.action.call(this, e, dt, button, config);
              mostrarToast("Exito", "La tabla ha sido exportada a Excel.", "success");
            }
          }
        ]
      });
    }

    function mostrarToast(titulo, mensaje, tipo) {

      let icon = '';
      if (tipo === 'success') {
        icon = '<span class="fas fa-check-circle text-white fs-6"></span>';
      } else if (tipo === 'error') {
        icon = '<span class="fas fa-times-circle text-white fs-6"></span>';
      } else if (tipo === 'warning') {
        icon = '<span class="fas fa-exclamation-circle text-white fs-6"></span>';
      } else if (tipo === 'info') {
        icon = '<span class="fas fa-info-circle text-white fs-6"></span>';
      }

      const alert = `
          <div class="alert alert-${tipo} border-0 d-flex align-items-center" role="alert">
              <div class="bg-${tipo} me-3 icon-item">${icon}</div>
              <p class="mb-0 flex-1">${titulo} ${mensaje}</p>
              <button class="btn-close" type="button" data-bs-dismiss="alert" aria-label="Close"></button>
          </div>`;

      $("#Alert").html(alert);

      $(".alert").toast("show");

      setTimeout(() => {
        $(".alert").alert('close');
      }, 4000);
    }

    function Activate(id) {
      console.log(id);
      const activar = {
        AccountID: id
      };
      console.log(activar)
      $.ajax({
        url: "/Account/Activate",
        data: activar,
        type: "POST",
        beforeSend: () => {
        },
        success: (res) => {
          if (res.ok) {
            mostrarToast("Exito", res.message, "success");
            cargarAccount();
          } else {
            mostrarToast("Error", res.message, "Failed");
          }
        },
        error: () => {
          alert("Ocurrió un error interno, por favor inténtalo más tarde");
        }
      });

    }

    function limpiarFormulario() {
      $("#id_account").val("");
      $("#id_people_").val("");
      $("#nombre").val("");
      $("#inicial").val("");
      $("#apellido").val("");
      $("#email").val("");
      $("#user").val("");
      $("#number").val("");
      $("#pass").val("");

    }
    function resetValidation(form) {
      form.reset();
      form.classList.remove('was-validated');
      const fields = form.querySelectorAll('.form-control');
      fields.forEach(field => {
        field.classList.remove('is-valid', 'is-invalid');
      });
    }
    
    function ShowModalEdit(accountID) {
      const data_account_id = {
        accountVM: {
          AccountID: accountID
        }
      };
      $.ajax({
        url: "/Account/List",
        data: data_account_id,
        type: "POST",
        beforeSend: () => { },
        success: (res) => {
          if (res.ok) {
            const account = res.data[0];
            $("#divPass").hide();
            $("#pass").prop('required', false);
            console.log(account);
            $("#id_account").val(account.accountID);
            $("#id_people_").val(account.peopleID);
            $("#nombre").val(account.peFirstName);
            $("#inicial").val(account.peMiddleInitial);
            $("#apellido").val(account.peLastName);
            $("#EmailAddress").val(account.acEmailAddress);
            $("#number").val(account.acPhoneNumber);


            $.ajax({
              url: "/Profiles/List",
              type: "POST",
              beforeSend: () => { },
              success: (res) => {
                if (res.ok) {
                  let html = `<option value="${account.profileID}">${account.proDescription}</option>`;
                  $.each(res.data, (index, value) => {
                    if (value.profileID !== account.profileID) {
                      html += `<option value="${value.profileID}">${value.proDescription}</option>`;
                    }
                  });
                  $("#ListProfile").html(html);
                } else {
                  mostrarToast("error", res.message, "warning");
                }
              },
              error: () => {
                alert("Ocurrió un error interno, por favor inténtalo más tarde");
              }
            });

            // Mostrar botón para cambiar contraseña si es necesario
            const boton = `
                      <button type="button" onclick="CambiarContraseña(${account.accountID});" class="btn btn-warning">Cambiar contraseña</button>
                    `;
            $("#group_btn").html(boton);
            $("#modalFinal").modal("show");
          } else {
            mostrarToast("Error", res.message, "error");
          }
        },
        error: () => {
          alert("Ocurrió un error interno, por favor inténtalo más tarde");
        }
      });
    }


    function CambiarContraseña(id) {
      const data_account_id = {
        accountVM: {
          AccountID: id
        }
      };
      $.ajax({
        url: "/Account/List",
        data: data_account_id,
        type: "POST",

        beforeSend: () => {
        },
        success: (res) => {
          if (res.ok) {
            $("#modalFinal").modal("hide");
            const account = res.data[0];
            console.log(res.data);
            $("#id_account").val(account.accountID);


            $("#ModalCambio").modal("show");
            console.log(account.accountID);
            limpiarFormPass();
          } else {
            mostrarToast("Error", res.messege, "error");
          }
        },
        error: () => {
          alert("Ocurrió un error interno, por favor inténtalo más tarde");
        }
      });
    }
    function limpiarFormPass() {
      $("#passVerify").val("");
      $("#passChange").val("");
    }
  </script>


}