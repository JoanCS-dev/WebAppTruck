@{
    ViewData["Title"] = "Profiles";
}
@section css{

}

<div id="Alert">
</div>

<div class="card">
  <div class="card-body d-flex justify-content-between">
    <div>
      <span class="fw-bold text-primary">Acciones para los perfiles</span>

      <span class="mx-1 mx-sm-2 text-300">|</span>

      <button class="btn btn-success btn-sm text-dark" type="button" id="btnProfiles"
        data-bs-toggle="tooltip" data-bs-placement="top" aria-label="Perfiles" data-bs-original-title="Agregar Perfil">
        Agregar
        <i class="fas fa-plus fa-w-16"></i>
      </button>
      
     
    </div>
  </div>
</div>
<br>

<div class="card">
    <div class="card-body">
        <div class="table-responsive scrollbar">
            
            <table class="table table-striped table-hover display nowrap" id="tmainProfiles">
                <thead>
                    <tr>
                        <th>Descripción</th>
                        <th>Estatus</th>
                        <th>Fecha</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>

                </tbody>
            </table>
        </div>
    </div>
</div>
<!--modal para los perfiles-->
<div class="modal fade" tabindex="-1" id="modalProfiles"  data-bs-backdrop="static" data-bs-keyboard="false"
  aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Perfiles</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="txtDescriptionP">Descripción <span class="Required">*</span></label>
                    <input type="hidden" id="_id_profiles_" value="0" />
                    <input type="text" id="txtDescriptionP" class="form-control" />
                </div>
                <div class="form-group form-check form-switch">
                    <label>Estatus <span class="Required">*</span></label>
                    <input type="checkbox" id="chkStatusP" class="form-check-input" />
                    <label class="form-check-label" for="chkStatus">Activo/Inactivo) </label>
                </div>
                <div class="form-group">
                    <label for="txtRDateP">Fecha <span class="Required">*</span></label>
                    <input type="datetime-local" id="txtRDateP" class="form-control" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="btnSaveProfiles">Guardar Cambios</button>
            </div>
        </div>
    </div>
</div>

<!--modal con tabla para seleccionar permisos-->
<div class="modal fade" tabindex="-1" id="modalPermisos" data-bs-backdrop="static" data-bs-keyboard="false" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Permisos</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <table class="table table-hover table-striped nowrap" id="tmainPermisos">
                        <thead class="bg-200">
                            <tr>
                                <th class="text-900 sort">Modulo</th>
                                <th class="text-900 sort">Submodulo</th>
                                <th class="text-900 sort">URL</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary">Guardar Cambios</button>
            </div>
        </div>
    </div>
</div>


@section JS {
    <script>

        cargarProfile();
        cargarPermisos();
        $("#btnProfiles").click(function () {
            LimpiarFormularioProfiles();
            $("#modalProfiles").modal("show");
        });

        
        $("#btnSaveProfiles").click(function () {
            const dateValue = $("#txtRDateP").val();
            const data_profile = {
                ProfileID: $("#_id_profiles_").val() || 0,
                ProDescription: $("#txtDescriptionP").val(),
                ProStatus: $("#chkStatusP").is(":checked") ? 1 : 0,
                ProRDate: dateValue ? new Date(dateValue).toISOString() : null
            };

            $.ajax({
                url: "/Profiles/AddUpdate",
                data: data_profile,
                type: "POST",
                success: function (res) {
                    if (res.ok) {
                       mostrarToast("Exito", res.messege, "success");
                        cargarProfile();
                        $("#modalProfiles").modal("hide");
                        LimpiarFormularioProfiles();
                    } else {
                       mostrarToast("Error", res.messege, "error");
                    }
                },
                error: function () {
                    alert("Ocurrió un error interno, por favor inténtalo más tarde");
                }
            });
        });

        function cargarProfile() {
            $.ajax({
                url: "/Profiles/List",
                type: "POST",
                success: function (res) {
                    if (res.ok) {
                        LlenarTablaP(res.data);
                    } else {
                        mostrarToast("Error", res.messege, "error");
                    }
                },
                error: function () {
                    alert("Ocurrió un error interno, por favor inténtalo más tarde");
                }
            });
        }
        function cargarPermisos(){
            $.ajax({
                url: "/SubModule/ListPermission",
                type: "POST",
                success: function (res) {
                    if (res.ok) {
                        LlenarTablaPermisos(res.data);
                        console.log(res.data);
                    } else {
                        mostrarToast("Error", res.messege, "error");
                    }
                },
                error: function () {
                    alert("Ocurrió un error interno, por favor inténtalo más tarde");
                }
            });
        }

        function LlenarTablaPermisos(listas){
            if($.fn.DataTable.isDataTable("#tmainPermisos")){
                $("#tmainPermisos").DataTable().destroy();
            }
            $("#tmainPermisos tbody").empty();
            tabla = $("#tmainPermisos").DataTable({
                data: listas,
                columns: [
                    { data: "moDescription", title: "Modulo" },
                    { data: "subDescription", title: "Submodulo" },
                    { data: "moController", title: "URL" },
                    { data: "isPermissionAply",
                        render: (value, type, row) => {
                            if (value == 0) {
                                return `<div class="form-check"><input class="form-check-input" id="flexCheckDefault" type="checkbox" value="" /></div>`;
                            } else if (value == 1) {
                                return `<div class="form-check"><input class="form-check-input" id="flexCheckChecked" type="checkbox" value="" checked="" /></div>`;
                            }
                        }
                    }
                ],
                responsive: true, 
                scrollX: true,
                autoWidth: false,
                language: {
                    url: 'https://cdn.datatables.net/plug-ins/1.10.24/i18n/Spanish.json'
                }

            });
        }

        function LlenarTablaP(lista) {
            if ($.fn.DataTable.isDataTable("#tmainProfiles")) {
                $("#tmainProfiles").DataTable().destroy();
            }

            $("#tmainProfiles tbody").remove();

            tabla = $("#tmainProfiles").DataTable({
                data: lista,
                columns: [
                    { data: "proDescription" },
                    { data: "proStatus" },
                    {
                        data: "proRDate", render: function (data) {

                            if (data) {
                                let timestampMatch = data.match(/\/Date\((\d+)\)\//);
                                if (timestampMatch) {
                                    let timestamp = parseInt(timestampMatch[1], 10);
                                    let date = new Date(timestamp);
                                    return date.toLocaleString('es-ES', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false });
                                } else {
                                    let date = new Date(data);
                                    if (isNaN(date.getTime())) {
                                        let parts = data.split(/[-T:.Z]/);
                                        date = new Date(Date.UTC(parts[0], parts[1] - 1, parts[2], parts[3] || 0, parts[4] || 0, parts[5] || 0));
                                    }
                                    return !isNaN(date.getTime()) ? date.toLocaleString('es-ES', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false }) : 'Fecha inválida';
                                }
                            } else {
                                return '';
                            }
                        }
                    },
                    {
                        data: "profileID",
                        render: (value, type, row) => {
                            let status = '';
                if(row.proStatus == 1){
                    status = `<a class="dropdown-item text-warning" onclick="Desactivate(${row.profileID});" href="#!">Desactivar</a>`;
                }else if(row.proStatus == 0){
                    status = `<a class="dropdown-item text-success" onclick="Activate(${row.profileID});" href="#!">Activar</a>`;
                }

              return `
             <div class="dropdown font-sans-serif position-static text-end"><button class="btn btn-link text-600 btn-sm dropdown-toggle btn-reveal" type="button" data-bs-toggle="dropdown" data-boundary="window" aria-haspopup="true" aria-expanded="false"><span class="fas fa-ellipsis-h fs-10"></span></button>
                <div class="dropdown-menu dropdown-menu-end border py-0">
                  <div class="py-2"><a class="dropdown-item" onclick="ShowModalProfileEdit(${value});" href="#">Edit</a> ${status} <a class="dropdown-item text-info" onclick="ShowModalPermission(${row.profileID});" href="#!">Permisos</a> </div>
                </div>
            </div>
              `;
                        }
                    }
                ],
                language: {
                    url: 'https://cdn.datatables.net/plug-ins/1.10.24/i18n/Spanish.json'
                },
               

            });
        }
      
        function ShowModalProfileEdit(profileID) {
            const data_profile_id = {
                profileID: profileID
            };

            $.ajax({
                url: "/Profiles/List",
                data: data_profile_id,
                type: "POST",
                success: function (res) {
                    if (res.ok && res.data.length > 0) {
                        const profile = res.data[0];
                        $("#_id_profiles_").val(profile.profileID);
                        $("#txtDescriptionP").val(profile.proDescription);
                        $("#chkStatusP").prop("checked", profile.proStatus);

                        let proRDate = profile.proRDate;
                        let date;

                        let timestampMatch = proRDate.match(/\/Date\((\d+)\)\//);
                        if (timestampMatch) {
                            let timestamp = parseInt(timestampMatch[1], 10);
                            date = new Date(timestamp);
                        } else {
                            date = new Date(proRDate);
                            if (isNaN(date.getTime())) {
                                let parts = proRDate.split(/[-T:.Z]/);
                                date = new Date(Date.UTC(parts[0], parts[1] - 1, parts[2], parts[3] || 0, parts[4] || 0, parts[5] || 0));
                            }
                        }

                        if (!isNaN(date.getTime())) {
                            let isoDate = date.toISOString().slice(0, 16);
                            $("#txtRDateP").val(isoDate);
                        } else {
                            $("#txtRDateP").val('');
                        }

                        $("#modalProfiles").modal("show");
                    } else {
                        alert("No se encontraron datos para el perfil seleccionado.");
                    }
                },
                error: function () {
                    alert("Ocurrió un error interno, por favor inténtalo más tarde.");
                }
            });
        }

        function ShowModalPermission(id){
            $("#modalPermisos").modal("show");
        }
        function LimpiarFormularioProfiles() {
            $("#_id_profiles_").val(0);
            $("#txtDescriptionP").val("");
            $("#txtRDateP").val("");
        }

        function mostrarToast(titulo, mensaje, tipo) {

            let icon = '';
            if (tipo === 'success') {
                icon = '<span class="fas fa-check-circle text-white fs-6"></span>';
            } else if (tipo === 'error') {
                icon = '<span class="fas fa-times-circle text-white fs-6"></span>';
            } else if (tipo === 'warning') {
                icon = '<span class="fas fa-exclamation-circle text-white fs-6"></span>';
            } else if (tipo === 'info') {
                icon = '<span class="fas fa-info-circle text-white fs-6"></span>';
            }

            const alert = `
            <div class="alert alert-${tipo} border-0 d-flex align-items-center" role="alert">
                <div class="bg-${tipo} me-3 icon-item">${icon}</div>
                <p class="mb-0 flex-1">${titulo} ${mensaje}</p>
                <button class="btn-close" type="button" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>`;

            $("#Alert").html(alert);

            $(".alert").toast("show");

            setTimeout(() => {
                $(".alert").alert('close');
            }, 4000);
        }

    </script>
}