@{
    ViewData["Title"] = "Module";
}

@await Html.PartialAsync("~/Views/Dashboard/Dashboard.cshtml")

@section css {
    <style>
        .error {
            color: red;
        }
    </style>
}

<div id="Toast_alert" class="toast-container position-fixed top-0 end-0 p-3">
</div>
<main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
    <div
        class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="h2">Módulos</h1>

        <div class="btn-toolbar mb-2 mb-md-0">

            <div class="btn-group me-2 ">

                <div class="dropdown">
                    <button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle" id="exportDropdown"
                        data-bs-toggle="dropdown" aria-expanded="false">Exportar</button>
                    <ul class="dropdown-menu" aria-labelledby="exportDropdown">
                        <li><a class="dropdown-item" href="#" id="exportExcel">Exportar a Excel</a></li>
                        <li><a class="dropdown-item" href="#" id="exportCSV">Exportar a CSV</a></li>
                        <li><a class="dropdown-item" href="#" id="exportCopy">Copiar al Portapapeles</a></li>
                        <li><a class="dropdown-item" href="#" id="exportPDF">Exportar a PDF</a></li>
                        <li><a class="dropdown-item" href="#" id="exportPrint">Imprimir</a></li>
                    </ul>
                </div>

            </div>
            <button type="button"
                class="btn btn-sm btn-outline-secondary dropdown-toggle d-flex align-items-center gap-1">
                <svg class="bi">
                    <use xlink:href="#calendar3" />
                </svg>
                This week
            </button>
        </div>

    </div>

    <div class="table-responsive small">
        <div class="m-3">
            <button type="button" class="btn btn-primary btn-sm" id="btnModule">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-box"
                    viewBox="0 0 16 16">
                    <path
                        d="M8.368 1.233a1 1 0 0 0-.736 0l-6 2.25A1 1 0 0 0 1 4.44v7.12a1 1 0 0 0 .632.933l6 2.25a1 1 0 0 0 .736 0l6-2.25A1 1 0 0 0 15 11.56V4.44a1 1 0 0 0-.632-.933l-6-2.25zM8 2.677 13.225 4.5 8 6.323 2.775 4.5 8 2.677zm6 3.103-5 1.875v6.412l5-1.875V5.78zM7 8.655 2 6.78v6.412l5 1.875V8.655z" />
                </svg>
                Módulo
            </button>
        </div>
    </div>
        <table class="table table-striped table-hover display nowrap" id="tmainM">
            <thead>
                <tr>
                    <td>ID</td>
                    <td>Descripción</td>
                    <td>Controlador</td>
                    <td>Icono</td>
                    <td>Estatus</td>
                    <td>Posición</td>
                    <td>Fecha</td>
                    <td>Acciones</td>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
</main>
</div>
</div>

<div class="modal fade" tabindex="-1" id="modalModule">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Módulo</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="txtDescription">Descripción</label>
                    <input type="hidden" id="_id_module_" value="0" />
                    <input type="text" id="txtDescription" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="txtController">Controlador</label>
                    <input type="text" id="txtController" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="txtIcon">Icono</label>
                    <input type="text" id="txtIcon" class="form-control" />
                </div>
                <div class="form-group form-check form-switch">
                    <label>Estatus</label>
                    <input type="checkbox" id="chkStatus" class="form-check-input" />
                    <label class="form-check-label" for="chkStatus">Activo/Inactivo)</label>
                </div>
                <div class="form-group">
                    <label for="txtPosition">Posición</label>
                    <input type="number" id="txtPosition" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="txtRDate">Fecha</label>
                    <input type="datetime-local" id="txtRDate" class="form-control" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="btnSaveModule">Guardar Cambios</button>
            </div>
        </div>
    </div>
</div>

@section JS {
    <script>

        cargarModulos();

        $("#btnModule").click(function () {
            LimpiarFormularioModule();
            $("#modalModule").modal("show");
        });

        $("#btnSaveModule").click(function () {
            const dateValue = $("#txtRDate").val();
            const data_module = {
                moduleID: $("#_id_module_").val() || 0,
                moDescription: $("#txtDescription").val(),
                moController: $("#txtController").val(),
                moIcon: $("#txtIcon").val(),
                moStatus: $("#chkStatus").is(":checked") ? 1 : 0,
                moPosition: $("#txtPosition").val(),
                moRDate: dateValue ? new Date(dateValue).toISOString() : null
            };

            $.ajax({
                url: "/Module/AddUpdate",
                data: JSON.stringify(data_module),
                type: "POST",
                beforeSend: () => { },
                success: function (res) {
                    if (res.ok) {
                        alert(res.message);
                        cargarModulos();
                        $("#modalModule").modal("hide");
                        LimpiarFormularioModule();
                    } else {
                        alert(res.message);
                    }
                },
                error: function () {
                    alert("Ocurrió un error interno, por favor inténtalo más tarde");
                }
            });
        });

        function cargarModulos() {
            $.ajax({
                url: "/Module/ListModule",
                type: "POST",
                dataType: "JSON",
                contentType: "application/json; charset=utf-8",
                success: function (res) {
                    if (res.ok) {
                        console.log(res.data);
                        LlenarTablaM(res.data);
                    } else {
                        alert(res.message);
                    }
                },
                error: function () {
                    alert("Ocurrió un error interno, por favor inténtalo más tarde");
                }
            });
        }

        function LlenarTablaM(lista) {
            let tmain = $("#tmainM").DataTable();
            tmain.clear();
            tmain.destroy();

            tmain = $("#tmainM").DataTable({
                data: lista,
                columns: [
                    { data: "moduleID" },
                    { data: "moDescription" },
                    { data: "moController" },
                    { data: "moIcon" },
                    {
                        data: "moStatus", render: function (data) {
                            return data === 1 ? "Activo" : "Inactivo";
                        }
                    },
                    { data: "moPosition" },
                    { data: "moRDate" },
                    {
                        data: "moduleID", render: function (data) {
                            return `<button type='button' class='btn btn-warning edit-button' onclick='ShowModalModuleEdit(${data})'>
                                            <i class="bi bi-pencil-fill"></i>
                                        </button>`;
                        }
                    }
                ],
                buttons: [
                    'excel', 'csv', 'copy', 'pdf', 'print'
                ],
                language: {
                    url: 'https://cdn.datatables.net/plug-ins/1.10.24/i18n/Spanish.json'
                }
            });
        }

        function ShowModalModuleEdit(_ModuleID) {
            const data_module_id = {
                module: {
                    moduleID: _ModuleID
                }
            };
            $.ajax({
                url: "/Module/ListModule",
                data: JSON.stringify(data_module_id),
                type: "POST",
                beforeSend: () => {
                },
                success: (res) => {

                    if (res.ok && res.data.length > 0) {

                        const moduleData = res.data[0];

                        console.log(moduleData);

                        $("#_id_module_").val(moduleData.moduleID);
                        $("#txtDescription").val(moduleData.moDescription);
                        $("#txtController").val(moduleData.moController);
                        $("#txtIcon").val(moduleData.moIcon);
                        $("#chkStatus").prop("checked", moduleData.moStatus === 1);
                        $("#txtPosition").val(moduleData.moPosition);
                        $("#txtRDate").val(moduleData.moRDate);
                        $("#modalModule").modal("show");
                    } else {
                        console.log("No se encontraron datos para el ModuleID:", moduleID);
                        alert("No se encontraron datos para el módulo seleccionado.");
                    }
                },
                error: (err) => {
                    console.log("AJAX error:", err);
                    alert("Ocurrió un error interno, por favor inténtalo más tarde");
                }
            });
        }

        function LimpiarFormularioModule() {
            $("#_id_module_").val(0);
            $("#txtDescription").val("");
            $("#txtController").val("");
            $("#txtIcon").val("");
            $("#chkStatus").prop("checked", false);
            $("#txtPosition").val("");
            $("#txtRDate").val("");
        }

      $('#exportExcel').click(function () {
            tabla.button('.buttons-excel').trigger();
            mostrarToast("Exito", "Tu tabla se ha exportado en formato Excel con exito", "Descarga");
        });


        $('#exportCSV').click(function () {
            tabla.button('.buttons-csv').trigger();
            mostrarToast("Exito", "Tu tabla se ha exportado en formato CSV con exito", "Descarga");
        });


        $('#exportCopy').click(function () {
            mostrarToast("Exito", "Tu tabla se ha copiado en tu portapapeles con exito", "Descarga");
            tabla.button('.buttons-copy').trigger();
        });


        $('#exportPDF').click(function () {
            tabla.button('.buttons-pdf').trigger();
            mostrarToast("Exito", "Tu tabla se ha exportado en formato PDF con exito", "Descarga");
        });


        $('#exportPrint').click(function () {
            tabla.button('.buttons-print').trigger();
            mostrarToast("Exito", "Tu tabla esta lista para imprimir con exito", "Imprimir");
        });

        function mostrarToast(titulo, mensaje, tipo) {
            const toast = `
                <div class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="toast-header">
                        <strong class="me-auto">${titulo}</strong>
                        <small>${tipo}</small>
                        <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                    <div class="toast-body">
                        ${mensaje}
                    </div>
                </div>`;
            $("#Toast_alert").html(toast);
            $(".toast").toast("show");
        }
      
    </script>
  }
