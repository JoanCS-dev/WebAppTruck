@{
    ViewData["Title"] = "Module";
}

@section css {
  <style>

    .btn-dark-green {
      background-color: #217346;
      border-color: #217346;
      color: white;
      margin-left: 18px;
    }

    .btn-dark-green:hover {
      background-color: #1e623d;
      border-color: #1e623d;
      color: white;
    }
    
  </style>
}

<div id="Alert"></div>
<div class="card">
    <div class="card-body">
        <div class="table-responsive scrollbar">
            <div class="m-3">
                <button type="button" class="btn btn-primary btn-sm" id="btnModule">
                   <i class="fas fa-box"></i>
                    Módulo
                </button>
            </div>
            <table class="table table-striped table-hover display nowrap" id="tmainM">
                <thead>
                    <tr>
                        <td>Descripción</td>
                        <td>Controlador</td>
                        <td>Icono</td>
                        <td>Estatus</td>
                        <td>Posición</td>
                        <td>Fecha</td>
                        <td>Acciones</td>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>

<div class="modal fade" tabindex="-1" id="modalModule">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Módulo</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="txtDescription">Descripción</label>
                    <input type="hidden" id="_id_module_" value="0" />
                    <input type="text" id="txtDescription" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="txtController">Controlador</label>
                    <input type="text" id="txtController" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="txtIcon">Icono</label>
                    <input type="text" id="txtIcon" class="form-control" />
                </div>
                <div class="form-group form-check form-switch">
                    <label>Estatus</label>
                    <input type="checkbox" id="chkStatus" class="form-check-input" />
                    <label class="form-check-label" for="chkStatus">Activo/Inactivo</label>
                </div>
                <div class="form-group">
                    <label for="txtPosition">Posición</label>
                    <input type="number" id="txtPosition" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="txtRDate">Fecha</label>
                    <input type="datetime-local" id="txtRDate" class="form-control" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="btnSaveModule">Guardar Cambios</button>
            </div>
        </div>
    </div>
</div>

@section JS {
    <script>
        $(document).ready(function () {
            cargarModulos();

            $("#btnModule").click(function () {
                LimpiarFormularioModule();
                $("#modalModule").modal("show");
            });

            $("#btnSaveModule").click(function () {
                const dateValue = $("#txtRDate").val();
                const data_module = {
                    ModuleID: $("#_id_module_").val() || 0,
                    MoDescription: $("#txtDescription").val(),
                    MoController: $("#txtController").val(),
                    MoIcon: $("#txtIcon").val(),
                    MoStatus: $("#chkStatus").is(":checked") ? 1 : 0,
                    MoPosition: $("#txtPosition").val(),
                    MoRDate: dateValue ? new Date(dateValue).toISOString() : null
                };

                $.ajax({
                    url: "/Module/AddUpdate",
                    data: data_module,
                    type: "POST",
                    beforeSend: () => { },
                    success: function (res) {
                        if (res.ok) {
                            mostrarToast("Éxito", res.messege, "success");
                            cargarModulos();
                            $("#modalModule").modal("hide");
                            LimpiarFormularioModule();
                        } else {
                            mostrarToast("Error", res.messege, "error");
                        }
                    },
                    error: function () {
                        alert("Ocurrió un error interno, por favor inténtalo más tarde");
                    }
                });
            });

            function cargarModulos() {
                $.ajax({
                    url: "/Module/ListModule",
                    type: "POST",
                    success: function (res) {
                        if (res.ok) {
                            console.log(res.data);
                            LlenarTablaM(res.data);
                        } else {
                            mostrarToast("Error", res.messege, "error");
                        }
                    },
                    error: function () {
                        alert("Ocurrió un error interno, por favor inténtalo más tarde");
                    }
                });
            }

            function LlenarTablaM(lista) {
                if ($.fn.DataTable.isDataTable("#tmainM")) {
                    $("#tmainM").DataTable().destroy();
                }

                $("#tmainM tbody").remove();

                var tabla = $("#tmainM").DataTable({
                    data: lista,
                    columns: [
                        { data: "moDescription" },
                        { data: "moController" },
                        { data: "moIcon" },
                        { data: "moStatus" },
                        { data: "moPosition" },
                        {
                            data: "moRDate",
                            render: function (data) {
                                if (data) {
                                    let timestampMatch = data.match(/\/Date\((\d+)\)\//);
                                    if (timestampMatch) {
                                        let timestamp = parseInt(timestampMatch[1], 10);
                                        let date = new Date(timestamp);
                                        return date.toLocaleString('es-ES', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false });
                                    } else {
                                        let date = new Date(data);
                                        if (isNaN(date.getTime())) {
                                            let parts = data.split(/[-T:.Z]/);
                                            date = new Date(Date.UTC(parts[0], parts[1] - 1, parts[2], parts[3] || 0, parts[4] || 0, parts[5] || 0));
                                        }
                                        return !isNaN(date.getTime()) ? date.toLocaleString('es-ES', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false }) : 'Fecha inválida';
                                    }
                                } else {
                                    return '';
                                }
                            }
                        },
                        {
                            data: "moduleID",
                            render: (value, type, row) => {
                                return `<td class="text-end">
                                <div class="dropdown font-sans-serif position-static"><button class="btn btn-link text-600 btn-sm dropdown-toggle btn-reveal" type="button" data-bs-toggle="dropdown" data-boundary="window" aria-haspopup="true" aria-expanded="false"><span class="fas fa-ellipsis-h fs-10"></span></button>
                                    <div class="dropdown-menu dropdown-menu-end border py-0">
                                      <div class="py-2"><a class="dropdown-item" onclick="ShowModalModuleEdit(${value});" href="#">Edit</a><a class="dropdown-item text-danger" href="#!">Delete</a></div>
                                    </div>
                                  </div>
                                </td>`;
                            }
                        }
                    ],
                    language: {
                        url: 'https://cdn.datatables.net/plug-ins/1.10.24/i18n/Spanish.json'
                    },
                    dom: 'Bfrtip',
                    buttons: [
                        {
                            extend: 'excelHtml5',
                            text: '<i class="fas fa-file-excel"></i> Excel',
                            className: 'btn btn-dark-green btn-sm',
                            title: 'Tabla Módulo',
                            action: function (e, dt, button, config) {
                                $.fn.dataTable.ext.buttons.excelHtml5.action.call(this, e, dt, button, config);
                                mostrarToast("Exito", "La tabla ha sido exportada a Excel.", "success");
                            }
                        }
                    ]
                });
            }

            function ShowModalModuleEdit(_moduleID) {
                const data_module_id = { moduleID: _moduleID };
                $.ajax({
                    url: "/Module/ListModule",
                    data: data_module_id,
                    type: "POST",
                    success: function (res) {
                        if (res.ok) {
                            const moduleData = res.data[0];
                            $("#_id_module_").val(moduleData.moduleID);
                            $("#txtDescription").val(moduleData.moDescription);
                            $("#txtController").val(moduleData.moController);
                            $("#txtIcon").val(moduleData.moIcon);
                            $("#chkStatus").prop("checked", moduleData.moStatus);
                            $("#txtPosition").val(moduleData.moPosition);

                            let moRDate = moduleData.moRDate;

                            let timestampMatch = moRDate.match(/\/Date\((\d+)\)\//);
                            if (timestampMatch) {
                                let timestamp = parseInt(timestampMatch[1], 10);
                                let date = new Date(timestamp);
                                let isoDate = date.toISOString().slice(0, 16);
                                $("#txtRDate").val(isoDate);
                            } else {
                                let date = new Date(moRDate);
                                if (!isNaN(date.getTime())) {
                                    let isoDate = date.toISOString().slice(0, 16);
                                    $("#txtRDate").val(isoDate);
                                } else {
                                    $("#txtRDate").val('');
                                }
                            }
                            $("#modalModule").modal("show");
                        } else {
                            console.log("No se encontraron datos para el ModuleID:", moduleID);
                            alert("No se encontraron datos para el módulo seleccionado.");
                        }
                    },
                    error: (err) => {
                        console.log("AJAX error:", err);
                        alert("Ocurrió un error interno, por favor inténtalo más tarde");
                    }
                });
            }

            function LimpiarFormularioModule() {
                $("#_id_module_").val(0);
                $("#txtDescription").val("");
                $("#txtController").val("");
                $("#txtIcon").val("");
                $("#txtPosition").val("");
                $("#txtRDate").val("");
            }

            function mostrarToast(titulo, mensaje, tipo) {
                let icon = '';
                if (tipo === 'success') {
                    icon = '<span class="fas fa-check-circle text-white fs-6"></span>';
                } else if (tipo === 'error') {
                    icon = '<span class="fas fa-times-circle text-white fs-6"></span>';
                } else if (tipo === 'warning') {
                    icon = '<span class="fas fa-exclamation-circle text-white fs-6"></span>';
                } else if (tipo === 'info') {
                    icon = '<span class="fas fa-info-circle text-white fs-6"></span>';
                }

                const alert = `
                <div class="alert alert-${tipo} border-0 d-flex align-items-center" role="alert">
                    <div class="bg-${tipo} me-3 icon-item">${icon}</div>
                    <p class="mb-0 flex-1">${titulo} ${mensaje}</p>
                    <button class="btn-close" type="button" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>`;

                $("#Alert").html(alert);

                $(".alert").toast("show");

                setTimeout(() => {
                    $(".alert").alert('close');
                }, 4000);
            }
        });
    </script>
}
