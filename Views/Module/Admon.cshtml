@{
    ViewData["Title"] = "Module";
}

@section css {
    <style>
        .treeview {
            padding-left: 20px;
        }

        .treeview-item {
            list-style: none;
            margin: 5px 0;
        }

        .treeview-item span {
            cursor: pointer;
            font-weight: 500;
        }

        .submodulo {
            padding-left: 20px;
        }

        .treeview-folder {
            cursor: pointer;
            display: flex;
            align-items: center;
            padding: 5px 10px;
            border-radius: 4px;
            transition: background-color 0.2s ease;
        }

        .treeview-folder:hover {
            background-color: #e9ecef;
        }

        .treeview-toggle {
            margin-right: 10px;
            font-size: 18px;
            color: #495057;
        }

        .treeview-folder .fa-folder {
            display: inline-block;
        }

        .treeview-folder .fa-folder-open {
            display: none;
        }

        .treeview-folder.open .fa-folder {
            display: none;
        }

        .treeview-folder.open .fa-folder-open {
            display: inline-block;
        }

        .treeview-file {
            cursor: pointer;
            color: #6c757d;
            padding: 5px 10px;
            border-radius: 4px;
        }

        .treeview-file:hover {
            background-color: #f8f9fa;
        }

        .context-menu {
            position: absolute;
            background-color: #fff;
            border: 1px solid #ddd;
            z-index: 1000;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
            display: none;
            border-radius: 4px;
            padding: 4px 0;
            font-size: 14px;
        }

        .context-menu-item {
            padding: 8px 12px;
            cursor: pointer;
            display: flex;
            align-items: center;
        }

        .context-menu-item i {
            font-size: 16px;
            margin-right: 8px;
            color: #495057;
        }

        .context-menu-item:hover {
            background-color: #f8f9fa;
        }

        .module-title {
            font-size: 18px;
            font-weight: 600;
            margin-bottom: 10px;
        }

        .fas.fa-folder-open,
        .fas.fa-folder {
            font-size: 20px;
            color: #007bff;
        }
    </style>
}

<div id="Alert"></div>

<div class="card">
    <div class="card-body d-flex justify-content-between">
        <div>
            <span class="fw-bold text-primary">Acciones para los Modulos</span>

            <span class="mx-1 mx-sm-2 text-300">|</span>

            <button class="btn btn-success btn-sm text-dark" type="button" id="btnModule" data-bs-toggle="tooltip"
                data-bs-placement="top" aria-label="Modulo" data-bs-original-title="Agregar Modulo">
                Agregar
                <i class="fas fa-plus fa-w-16"></i>
            </button>

        </div>
    </div>
</div>
<br>
<div class="card">
    <div class="card-body">
        <div class="module-title">
            Despliega y haz click derecho en el árbol de menú, para ver las opciones
        </div> <br>
        <div class="treeview" id="treeview"></div>
    </div>
</div>

<div class="modal fade" tabindex="-1" id="modalModule">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Módulo</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="txtDescription">Descripción <span class="Required">*</span></label>
                    <input type="hidden" id="_id_module_" value="0" />
                    <input type="text" id="txtDescription" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="txtController">Controlador <span class="Required">*</span></label>
                    <input type="text" id="txtController" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="txtIcon">Icono <span class="Required">*</span></label>
                    <input type="text" id="txtIcon" class="form-control" />
                </div>
                <div class="form-group form-check form-switch">
                    <label>Estatus <span class="Required">*</span></label>
                    <input type="checkbox" id="chkStatus" class="form-check-input" />
                    <label class="form-check-label" for="chkStatus">Activo/Inactivo</label>
                </div>
                <div class="form-group">
                    <label for="txtPosition">Posición <span class="Required">*</span></label>
                    <input type="number" id="txtPosition" class="form-control" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="btnSaveModule">Guardar Cambios</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" tabindex="-1" id="modalSubModule">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">SubMódulo</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="txtDescription">Descripción <span class="Required">*</span></label>
                    <input type="hidden" id="_id_submodule_" value="0" />
                    <input type="text" id="txtSubDescription" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="txtController">Acción <span class="Required">*</span></label>
                    <input type="text" id="txtAction" class="form-control" />
                </div>
                <div class="form-group form-check form-switch">
                    <label>Estatus <span class="Required">*</span></label>
                    <input type="checkbox" id="chkStatusS" class="form-check-input" />
                    <label class="form-check-label" for="chkStatus">Activo/Inactivo)</label>
                </div>
                <div class="form-group">
                    <label for="txtPosition">Posición <span class="Required">*</span></label>
                    <input type="number" id="txtSubPosition" class="form-control" />
                </div>
                <div class="form-group">
                    <label>Modulo</label>
                    <select class="form-control" id="listModulo">
                        <option value="-1">Seleccione</option>
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="btnSaveSubModule">Guardar Cambios</button>
            </div>
        </div>
    </div>
</div>

@section JS {
    <script>

        $(document).ready(function () {
            cargarModulos();
            cargarSubModulos();

            $("#btnModule").click(function () {
                LimpiarFormularioModule();
                $("#modalModule").modal("show");
            });

            $("#btnSubModule").click(function () {
                LimpiarFormularioSubModule();
                $("#modalSubModule").modal("show");
            });

            $("#btnSaveModule").click(function () {
                const dateValue = $("#txtRDate").val();
                const data_module = {
                    ModuleID: $("#_id_module_").val() || 0,
                    MoDescription: $("#txtDescription").val(),
                    MoController: $("#txtController").val(),
                    MoIcon: $("#txtIcon").val(),
                    MoStatus: $("#chkStatus").is(":checked") ? 1 : 0,
                    MoPosition: $("#txtPosition").val(),
                    MoRDate: dateValue ? new Date(dateValue).toISOString() : null
                };

                $.ajax({
                    url: "/Module/AddUpdate",
                    data: data_module,
                    type: "POST",
                    beforeSend: () => { },
                    success: function (res) {
                        if (res.ok) {
                            mostrarToast("Éxito", res.messege, "success");
                            cargarModulos();
                            $("#modalModule").modal("hide");
                            LimpiarFormularioModule();
                        } else {
                            mostrarToast("Error", res.messege, "error");
                        }
                    },
                    error: function () {
                        alert("Ocurrió un error interno, por favor inténtalo más tarde");
                    }
                });
            });

            $("#btnSaveSubModule").click(function () {
                const dateValue = $("#txtSubRDate").val();
                const data_submodule = {
                    subModuleID: $("#_id_submodule_").val(),
                    subDescription: $("#txtSubDescription").val(),
                    subAction: $("#txtAction").val(),
                    subStatus: $("#chkStatusS").is(":checked") ? 1 : 0,
                    subPosition: $("#txtSubPosition").val(),
                    subRDate: dateValue ? new Date(dateValue).toISOString() : null,
                    moduleID: $("#listModulo").val(),
                };

                $.ajax({
                    url: "/Submodule/AddUpdate",
                    data: data_submodule,
                    type: "POST",
                    beforeSend: () => { },
                    success: function (res) {
                        if (res.ok) {
                            mostrarToast("Exito", res.messege, "success");
                            cargarSubModulos();
                            $("#modalSubModule").modal("hide");
                            LimpiarFormularioSubModule();
                        } else {
                            mostrarToast("Error", res.messege, "error");
                        }
                    },
                    error: function () {
                        alert("Ocurrió un error interno, por favor inténtalo más tarde");
                    }
                });
            });
        });

        function cargarModulos() {
            $.ajax({
                url: "/Module/ListModule",
                type: "POST",
                dataType: "JSON",
                contentType: "application/json; charset=utf-8;",
                success: function (res) {
                    if (res.ok) {
                        let html = `<option value="-1">Seleccione</option>`;
                        $.each(res.data, (index, value) => {
                            html += `<option value="${value.moduleID}">${value.moDescription}</option>`;
                        });
                        $("#listModulo").html(html);
                        const modulos = res.data;
                        if (Array.isArray(modulos)) {
                            cargarSubModulos(modulos);
                        } else {
                            mostrarToast("Error", "El formato de datos de los módulos es incorrecto.", "error");
                        }
                    } else {
                        mostrarToast("Error", res.messege, "error");
                    }
                },
                error: function () {
                    alert("Ocurrió un error interno, por favor inténtalo más tarde");
                }
            });
        }

        function cargarSubModulos(modulos) {
            $.ajax({
                url: "/SubModule/ListSubModule",
                type: "POST",
                dataType: "JSON",
                contentType: "application/json; charset=utf-8;",
                success: function (res) {
                    if (res.ok) {
                        const submodulos = res.data;
                        if (Array.isArray(submodulos)) {
                            modulos.forEach(modulo => {
                                modulo.subModules = submodulos.filter(sub => sub.moduleID === modulo.moduleID);
                            });
                            TreeView(modulos);
                        } else {
                            mostrarToast("Error", "El formato de datos de los submódulos es incorrecto.", "error");
                        }
                    } else {
                        mostrarToast("Error", res.messege, "error");
                    }
                },
                error: function () {
                    alert("Ocurrió un error interno, por favor inténtalo más tarde");
                }
            });
        }

        $(document).on("click", ".treeview-folder > span", function () {
            var $folder = $(this).closest(".treeview-folder");
            var $subModulosList = $folder.next("ul.submodulos-list").first();
            var $toggleIcon = $folder.find(".treeview-toggle");

            $subModulosList.collapse('toggle');

            $folder.toggleClass("open");
            $toggleIcon.toggleClass("fa-folder fa-folder-open");
        })

        $("#treeview").on("contextmenu", ".module-item .treeview-folder", function (e) {
            var moduleId = $(this).closest(".module-item").data("id");
            menuModulo(e, moduleId);
        });

        $("#treeview").on("contextmenu", ".submodule-item .treeview-folder", function (e) {
            var subModuleId = $(this).closest(".submodule-item").data("id");
            menuSubModulo(e, subModuleId);
        });

        function TreeView(modulos) {
            const treeView = $("#treeview");
            treeView.empty();

            if (Array.isArray(modulos)) {
                modulos.forEach(modulo => {
                    const moduloElement = $("<li>").addClass("treeview-item module-item").attr("data-id", modulo.moduleID);
                    const folderElement = $("<div>").addClass("treeview-folder");
                    const toggleIcon = $("<i>").addClass("fas fa-folder treeview-toggle");
                    folderElement.append(toggleIcon);
                    folderElement.append($("<span>").addClass("modulo-nombre").text(modulo.moDescription));
                    moduloElement.append(folderElement);

                    if (Array.isArray(modulo.subModules) && modulo.subModules.length > 0) {
                        const subModulosList = $("<ul>").addClass("submodulos-list collapse").attr("id", "module-" + modulo.moduleID);
                        modulo.subModules.forEach(subModulo => {
                            const subModuloElement = $("<li>").addClass("treeview-submodulo submodule-item").attr("data-id", subModulo.subModuleID);
                            const subFolderElement = $("<div>").addClass("treeview-folder");
                            const subToggleIcon = $("<i>").addClass("fas fa-folder treeview-toggle");
                            subFolderElement.append(subToggleIcon);
                            subFolderElement.append($("<span>").addClass("submodulo-nombre").text(subModulo.subDescription));
                            subModuloElement.append(subFolderElement);
                            subModulosList.append(subModuloElement);
                        });
                        moduloElement.append(subModulosList);
                        folderElement.attr("data-bs-toggle", "collapse").attr("href", "#module-" + modulo.moduleID).attr("role", "button").attr("aria-expanded", "false");
                    }

                    treeView.append(moduloElement);
                });
            } else {
                console.error("El formato de datos de los módulos es incorrecto o no es un arreglo.");
            }
        }

        function menuModulo(e, moduleId) {
            e.preventDefault();
            $('.context-menu').remove();
            const menu = $("<div>").addClass("context-menu")
            .append($("<div>").addClass("context-menu-item")
            .html('<i class="fas fa-edit"></i> Editar Módulo')
            .on("click", function () { ShowModalModuleEdit(moduleId); }))
            .append($("<div>").addClass("context-menu-item")
            .html('<i class="fas fa-plus"></i> Agregar Submódulo')
            .on("click", function () { agregarSubModulo(moduleId); }))
            .append($("<div>").addClass("context-menu-item")
            .html('<i class="fas fa-arrow-up"></i> Mover hacia Arriba')
            .on("click", function () { MoverModuloArriba(moduleId); }))
            .append($("<div>").addClass("context-menu-item")
            .html('<i class="fas fa-arrow-down"></i> Mover hacia Abajo')
            .on("click", function () { MoverModuloAbajo(moduleId); }));
            $("body").append(menu);

            menu.css({ top: e.pageY, left: e.pageX }).show();

            $(document).on("click.menuModulo", function (event) {
                if (!$(event.target).closest(".context-menu").length) {
                    menu.remove();
                    $(document).off("click.menuModulo");
                }
            });
        }

        function menuSubModulo(e, subModuleId) {
            e.preventDefault();
            $('.context-menu').remove();
            const menu = $("<div>").addClass("context-menu")
            .append($("<div>").addClass("context-menu-item")
            .html('<i class="fas fa-edit"></i> Editar Submódulo')
            .on("click", function () { ShowModalSubEdit(subModuleId); }))
            .append($("<div>").addClass("context-menu-item")
            .html('<i class="fas fa-arrow-up"></i> Mover hacia Arriba')
            .on("click", function () { MoverSubModuloArriba(subModuleId); }))
            .append($("<div>").addClass("context-menu-item")
            .html('<i class="fas fa-arrow-down"></i> Mover hacia Abajo')
            .on("click", function () { MoverSubModuloAbajo(subModuleId); }));
            $("body").append(menu);

            menu.css({ top: e.pageY, left: e.pageX }).show();

            $(document).on("click.menuSubModulo", function (event) {
                if (!$(event.target).closest(".context-menu").length) {
                    menu.remove();
                    $(document).off("click.menuSubModulo");
                }
            });
        }

        function MoverModuloArriba(moduleId) {
            var $currentModule = $(`[data-id=${moduleId}]`).closest(".treeview-item");
            var $previousModule = $currentModule.prev(".treeview-item");

            if ($previousModule.length) {
                $currentModule.insertBefore($previousModule);
            }
        }

        function MoverModuloAbajo(moduleId) {
            var $currentModule = $(`[data-id=${moduleId}]`).closest(".treeview-item");
            var $nextModule = $currentModule.next(".treeview-item");

            if ($nextModule.length) {
                $currentModule.insertAfter($nextModule);
            }
        }

        function MoverSubModuloArriba(subModuleId) {
            var $currentSubModule = $(`[data-id=${subModuleId}]`).closest(".treeview-submodulo");
            var $previousSubModule = $currentSubModule.prev(".treeview-submodulo");

            if ($previousSubModule.length) {
                $currentSubModule.insertBefore($previousSubModule);
            }
        }

        function MoverSubModuloAbajo(subModuleId) {
            var $currentSubModule = $(`[data-id=${subModuleId}]`).closest(".treeview-submodulo");
            var $nextSubModule = $currentSubModule.next(".treeview-submodulo");

            if ($nextSubModule.length) {
                $currentSubModule.insertAfter($nextSubModule);
            }
        }

        function ShowModalModuleEdit(_moduleID) {
            const data_module_id = { moduleID: _moduleID };
            $.ajax({
                url: "/Module/ListModule",
                data: data_module_id,
                type: "POST",
                success: function (res) {
                    if (res.ok) {
                        const moduleData = res.data[0];
                        $("#_id_module_").val(moduleData.moduleID);
                        $("#txtDescription").val(moduleData.moDescription);
                        $("#txtController").val(moduleData.moController);
                        $("#txtIcon").val(moduleData.moIcon);
                        $("#chkStatus").prop("checked", moduleData.moStatus);
                        $("#txtPosition").val(moduleData.moPosition);
                        $("#modalModule").modal("show");
                    } else {
                        console.log("No se encontraron datos para el ModuleID:", moduleID);
                        alert("No se encontraron datos para el módulo seleccionado.");
                    }
                },
                error: (err) => {
                    console.log("AJAX error:", err);
                    alert("Ocurrió un error interno, por favor inténtalo más tarde");
                }
            });
        }

        function ShowModalSubEdit(_submoduleID) {
            const data_submodule_id = { subModuleID: _submoduleID };
            $.ajax({
                url: "/SubModule/ListSubModule",
                data: data_submodule_id,
                type: "POST",
                success: function (res) {
                    if (res.ok) {
                        const submodule = res.data[0];
                        $("#_id_submodule_").val(submodule.subModuleID);
                        $("#txtSubDescription").val(submodule.subDescription);
                        $("#txtAction").val(submodule.subAction);
                        $("#chkStatusS").prop("checked", submodule.subStatus);
                        $("#txtSubPosition").val(submodule.subPosition);
                        $("#listModulo").val(submodule.moduleID);
                        $("#modalSubModule").modal("show");
                    } else {
                        mostrarToast("Error", res.messege, "error");
                    }
                },
                error: function () {
                    alert("Ocurrió un error interno, por favor inténtalo más tarde");
                }
            });
        }

        function agregarSubModulo(moduleID) {
            LimpiarFormularioSubModule();
            $("#listModulo").val(moduleID).prop("disabled", true);
            $("#modalSubModule").modal("show");
        }

        function LimpiarFormularioModule() {
            $("#_id_module_").val(0);
            $("#txtDescription").val("");
            $("#txtController").val("");
            $("#txtIcon").val("");
            $("#txtPosition").val("");
            $("#txtRDate").val("");
        }

        function LimpiarFormularioSubModule() {
            $("#_id_submodule_").val(0);
            $("#txtSubDescription").val("");
            $("#txtAction").val("");
            $("#chkStatusS").prop("checked", false);
            $("#txtSubPosition").val("");
            $("#txtSubRDate").val("");
            $("#listModulo").val("-1").prop("disabled", false);
        }

        function mostrarToast(titulo, mensaje, tipo) {
            let icon = '';
            if (tipo === 'success') {
                icon = '<span class="fas fa-check-circle text-white fs-6"></span>';
            } else if (tipo === 'error') {
                icon = '<span class="fas fa-times-circle text-white fs-6"></span>';
            } else if (tipo === 'warning') {
                icon = '<span class="fas fa-exclamation-circle text-white fs-6"></span>';
            } else if (tipo === 'info') {
                icon = '<span class="fas fa-info-circle text-white fs-6"></span>';
            }

            const alertHTML = `
                    <div class="alert alert-${tipo} border-0 d-flex align-items-center" role="alert">
                        <div class="bg-${tipo} me-3 icon-item">${icon}</div>
                        <p class="mb-0 flex-1">${titulo} ${mensaje}</p>
                        <button class="btn-close" type="button" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                `;

            const alert = $(alertHTML);

            $("#Alert").html(alert);

            $(".alert").toast("show");

            setTimeout(() => {
                $(".alert").alert('close');
            }, 4000);
        }

        $(document).click(function (e) {
            if (!$(e.target).closest('.context-menu').length) {
                $('.context-menu').remove();
            }
        });

    </script>
}
