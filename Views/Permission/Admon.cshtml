@{
    ViewData["Title"] = "Permission";
}

<style>
    .btn-dark-green {
        background-color: #217346;
        border-color: #217346;
        color: white;
        margin-left: 950px;
    }

    .btn-dark-green:hover {
        background-color: #1e623d;
        border-color: #1e623d;
        color: white;
    }
    .Required{
      color: red;
      font-weight: bold;
    }
</style>
<div id="Alert">
</div>
<div class="card">
    <div class="card-body">
        <div class="table-responsive scrollbar">
            <div class="m-3">
                <button type="button" class="btn btn-warning btn-sm text-dark" id="btnPermission">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor"
                        class="bi bi-shield-check" viewBox="0 0 16 16">
                        <path
                            d="M4.293 9.293a1 1 0 0 0 1.414 0L7 8.414l3.293 3.293a1 1 0 0 0 1.414-1.414l-4-4a1 1 0 0 0-1.414 0l-2 2a1 1 0 0 0 0 1.414z" />
                        <path
                            d="M3.5 0A1.5 1.5 0 0 0 2 1.5v4.246a3.5 3.5 0 0 0-.5 6.977V15.5a.5.5 0 0 0 .5.5h12a.5.5 0 0 0 .5-.5v-1.777a3.5 3.5 0 0 0-.5-6.977V1.5A1.5 1.5 0 0 0 13.5 0h-11zm8.122 5.808l-3.35 3.292a.5.5 0 0 1-.708 0l-1.35-1.343a.5.5 0 0 1 .707-.708l.943.94 2.646-2.594a.5.5 0 0 1 .707.707z" />
                    </svg>
                    Permisos
                </button>
                <button type="button" class="btn btn-dark-green btn-sm btn-excel my-3" onclick="exportExcel('tmainPermission', 'Tabla Permisos')" data-toggle="tooltip" data-placement="top" title="Exportar a Excel">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-file-earmark-excel-fill" viewBox="0 0 16 16">
                        <path d="M5.884 6.686L8 8.832l2.116-2.146a.5.5 0 1 1 .764.644L8.707 9.293l2.173 2.207a.5.5 0 0 1-.764.644L8 10.768l-2.116 2.146a.5.5 0 0 1-.764-.644L7.293 9.293 5.12 7.086a.5.5 0 1 1 .764-.644z"/>
                        <path d="M14 4a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v4H3.5A1.5 1.5 0 0 0 2 9.5v5A1.5 1.5 0 0 0 3.5 16h9A1.5 1.5 0 0 0 14 14.5V4zm-4.5-2A1.5 1.5 0 0 1 11 3.5V10H6V3.5A1.5 1.5 0 0 1 7.5 2h2zM4 3.5A1.5 1.5 0 0 1 5.5 2h2A1.5 1.5 0 0 1 9 3.5V10h1V4a1 1 0 0 0-1-1H7V3.5zM5 5h1V4H5v1zm0 1h1V5H5v1z"/>
                    </svg>
                    Excel
                </button>
            </div>
            <table class="table table-striped table-hover display nowrap" id="tmainPermission">
                <thead>
                    <tr>
                        <th>Estatus</th>
                        <th>Fecha</th>
                        <th>Submódulo</th>
                        <th>Perfil</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="modal fade" tabindex="-1" id="modalPermission">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Permisos</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="form-group form-check form-switch">
                    <label>Estatus <span class="Required">*</span></label>
                    <input type="hidden" id="_id_permission_" value="0" />
                    <input type="checkbox" id="chkStatusPer" class="form-check-input" />
                    <label class="form-check-label" for="chkStatus">Activo/Inactivo)</label>
                </div>
                <div class="form-group">
                    <label for="txtRDate">Fecha <span class="Required">*</span></label>
                    <input type="datetime-local" id="TXTSubRDate" class="form-control" />
                </div>
                <div class="form-group">
                    <label>SubMódulo <span class="Required">*</span></label>
                    <select class="form-control" id="listSubModulo">
                        <option value="-1">Seleccione</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Perfil <span class="Required">*</span></label>
                    <select class="form-control" id="listProfile">
                        <option value="-1">Seleccione</option>
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="btnSavePermission">Guardar Cambios</button>
            </div>
        </div>
    </div>
</div>

<script src="~/js/xlsx.full.min.js"></script>

@section JS {
    <script>

        cargarPermission();

        cargarSubModulo();

        cargarProfile();

        $("#btnPermission").click(function () {
            LimpiarFormularioPermission();
            $("#modalPermission").modal("show");
        });

        $("#btnSavePermission").click(function () {
            const dateValue = $("#TXTSubRDate").val();
            const data_permission = {
                permissionID: $("#_id_permission_").val(),
                perStatus: $("#chkStatusPer").is(":checked") ? 1 : 0,
                subRDate: dateValue ? new Date(dateValue).toISOString() : null,
                subModuleID: $("#listSubModulo").val(),
                profileID: $("#listPerfil")
            };

            $.ajax({
                url: "/Permission/AddUpdate",
                data: JSON.stringify(data_permission),
                type: "POST",
                beforeSend: () => { },
                success: function (res) {
                    if (res.ok) {
                       mostrarToast("Exito", res.messege, "success");
                        cargarPermission();
                        $("#modalPermission").modal("hide");
                        LimpiarFormulariouPermission();
                    } else {
                       mostrarToast("Atención", res.messege, "warning");
                    }
                },
                error: function () {
                    alert("Ocurrió un error interno, por favor inténtalo más tarde");
                }
            });
        });

        function cargarPermission() {
            $.ajax({
                url: "/Permission/ListPermission",
                type: "POST",
                dataType: "JSON",
                contentType: "application/json; charset=utf-8",
                success: function (res) {
                    if (res.ok) {
                        LlenarTablaPer(res.data);
                    } else {
                        mostrarToast("Atención", res.messege, "warning");
                    }
                },
                error: function () {
                    alert("Ocurrió un error interno, por favor inténtalo más tarde");
                }
            });
        }

        function cargarSubModulo() {
            $.ajax({
                url: "/SubModule/ListSubModule",
                type: "POST",
                dataType: "JSON",
                contentType: "application/json; charset=utf-8;",
                success: function (res) {
                    if (res.ok) {
                        let html = `<option value="-1">Seleccione</option>`;
                        $.each(res.data, (index, value) => {
                            html += `<option value="${value.subModuleID}">${value.subDescription}</option>`;
                        });
                        $("#listSubModulo").html(html);
                    } else {
                        mostrarToast("Atención", res.messege, "warning");
                    }
                },
                error: function () {
                    alert("Ocurrió un error interno, por favor inténtalo más tarde");
                }
            });
        }

        function cargarProfile() {
            $.ajax({
                url: "/Profiles/List",
                type: "POST",
                dataType: "JSON",
                contentType: "application/json; charset=utf-8;",
                beforeSend: () => { },
                success: (res) => {
                    if (res.ok) {
                        console.log(res.data);
                        let html = `<option value="-1">Seleccione</option>`;
                        $.each(res.data, (index, value) => {
                            html += `<option value="${value.profileID}">${value.proDescription}</option>`;
                        });
                        $("#listProfile").html(html);
                    } else {
                       mostrarToast("Atención", res.messege, "warning");
                    }
                },
                error: () => {
                    alert("Ocurrió un error interno, por favor inténtalo más tarde");
                }
            });
        }

        function LlenarTablaPer(lista) {
            if ($.fn.DataTable.isDataTable("#tmainPermission")) {
                $("#tmainPermission").DataTable().destroy();
            }

            $("#tmainPermission tbody").remove();

            tabla = $("#tmainPermission").DataTable({
                data: lista,
                columns: [
                    { data: "perStatus" },
                    {
                        data: "subRDate", render: function (data) {

                            if (data) {
                                let timestampMatch = data.match(/\/Date\((\d+)\)\//);
                                if (timestampMatch) {
                                    let timestamp = parseInt(timestampMatch[1], 10);
                                    let date = new Date(timestamp);
                                    return date.toLocaleString('es-ES', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false });
                                } else {
                                    let date = new Date(data);
                                    if (isNaN(date.getTime())) {
                                        let parts = data.split(/[-T:.Z]/);
                                        date = new Date(Date.UTC(parts[0], parts[1] - 1, parts[2], parts[3] || 0, parts[4] || 0, parts[5] || 0));
                                    }
                                    return !isNaN(date.getTime()) ? date.toLocaleString('es-ES', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false }) : 'Fecha inválida';
                                }
                            } else {
                                return '';
                            }
                        }
                    },
                    { data: "subModuleID" },
                    { data: "profileID" },
                    {
                        data: "permissionID",
                        render: (value, type, row) => {
                            return `<td class="text-end">
            <div class="dropdown font-sans-serif position-static"><button class="btn btn-link text-600 btn-sm dropdown-toggle btn-reveal" type="button" data-bs-toggle="dropdown" data-boundary="window" aria-haspopup="true" aria-expanded="false"><span class="fas fa-ellipsis-h fs-10"></span></button>
                <div class="dropdown-menu dropdown-menu-end border py-0">
                  <div class="py-2"><a class="dropdown-item" onclick="ShowModalPerEdit(${value});" href="#">Edit</a><a class="dropdown-item text-danger" href="#!">Delete</a></div>
                </div>
              </div>
            </td>`;
                        }
                    }
                ],
                language: {
                    url: 'https://cdn.datatables.net/plug-ins/1.10.24/i18n/Spanish.json'
                }
            });
        }

        function ShowModalPerEdit(_permissionID) {
            const data_permission_id = { permissionID: _permissionID };
            $.ajax({
                url: "/Permission/ListPermission",
                data: data_permission_id,
                type: "POST",
                success: function (res) {
                    if (res.ok) {
                        const permission = res.data[0];
                        $("#_id_permission_").val(permission.permissionID);
                        $("#chkStatusPer").prop("checked", permission.perStatus);
                        let subRDate = permission.subRDate;
                        let timestampMatch = subRDate.match(/\/Date\((\d+)\)\//);
                        if (timestampMatch) {
                            let timestamp = parseInt(timestampMatch[1], 10);
                            let date = new Date(timestamp);
                            let isoDate = date.toISOString().slice(0, 16);
                            $("#TXTSubRDate").val(isoDate);
                        } else {
                            let date = new Date(subRDate);
                            if (!isNaN(date.getTime())) {
                                let isoDate = date.toISOString().slice(0, 16);
                                $("#TXTSubRDate").val(isoDate);
                            } else {
                                $("#TXTSubRDate").val('');
                            }
                        }
                        $("#listSubModulo").val(permission.subModuleID);
                        $("#listProfile").val(permission.profileID);
                        $("#modalPermission").modal("show");
                    } else {
                       mostrarToast("Error", res.messege, "error");
                    }
                },
                error: function () {
                    alert("Ocurrió un error interno, por favor inténtalo más tarde");
                }
            });
        }

        function LimpiarFormularioPermission() {
            $("#_id_permission_").val(0);
            $("#chkStatusPer").prop("checked", false);
            $("#TXTSubRDate").val("");
            $("#listSubModulo").val("-1");
            $("#listPerfil").val("-1");
        }

        function exportExcel(tableID, filename = '') {
            let table = document.getElementById(tableID);
            let wb = XLSX.utils.table_to_book(table, { sheet: "Sheet1" });

            let wbout = XLSX.write(wb, { bookType: 'xlsx', type: 'binary' });

            function s2ab(s) {
                let buf = new ArrayBuffer(s.length);
                let view = new Uint8Array(buf);
                for (let i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;
                return buf;
            }

            saveAs(new Blob([s2ab(wbout)], { type: "application/octet-stream" }), filename + ".xlsx");
            mostrarToast("Exito", "La tabla se ha descargado exitosamente en formato EXCEL", "success");
        }
        function mostrarToast(titulo, mensaje, tipo) {

            let icon = '';
            if (tipo === 'success') {
                icon = '<span class="fas fa-check-circle text-white fs-6"></span>';
            } else if (tipo === 'error') {
                icon = '<span class="fas fa-times-circle text-white fs-6"></span>';
            } else if (tipo === 'warning') {
                icon = '<span class="fas fa-exclamation-circle text-white fs-6"></span>';
            } else if (tipo === 'info') {
                icon = '<span class="fas fa-info-circle text-white fs-6"></span>';
            }

            const alert = `
            <div class="alert alert-${tipo} border-0 d-flex align-items-center" role="alert">
                <div class="bg-${tipo} me-3 icon-item">${icon}</div>
                <p class="mb-0 flex-1">${titulo} ${mensaje}</p>
                <button class="btn-close" type="button" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>`;

            $("#Alert").html(alert);

            $(".alert").toast("show");

            setTimeout(() => {
                $(".alert").alert('close');
            }, 4000);
        }

    </script>
}