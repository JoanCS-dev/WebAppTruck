@{
    ViewData["Title"] = "SubModule";
}

<style>
    .btn-dark-green {
        background-color: #217346;
        border-color: #217346;
        color: white;
        margin-left: 18px;
    }

    .btn-dark-green:hover {
        background-color: #1e623d;
        border-color: #1e623d;
        color: white;
    }
    .Required{
      color: red;
      font-weight: bold;
    }
</style>
<div id="Alert">
</div>
<div class="card">
    <div class="card-body">
        <div class="table-responsive scrollbar">
            <div class="m-3">
                <button type="button" class="btn btn-info btn-sm text-dark" id="btnSubModule">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor"
                        class="bi bi-box-seam" viewBox="0 0 16 16">
                        <path
                            d="M7.293 0.293a1 1 0 0 1 1.414 0l6 6a1 1 0 0 1-1.414 1.414L8 2.414 2.707 7.707a1 1 0 0 1-1.414-1.414l6-6z" />
                        <path
                            d="M0 9a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v7a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V9zm13 0H3v7h10V9z" />
                    </svg>
                    Submódulo
                </button>
            </div>
            <table class="table table-striped table-hover display nowrap" id="tmain">
                <thead>
                    <tr>
                        <td>Descripción</td>
                        <td>Acción</td>
                        <td>Estatus</td>
                        <td>Posición</td>
                        <td>Fecha</td>
                        <td>Módulo</td>
                        <td>Acciones</td>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="modal fade" tabindex="-1" id="modalSubModule">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">SubMódulo</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="txtDescription">Descripción <span class="Required">*</span></label>
                    <input type="hidden" id="_id_submodule_" value="0" />
                    <input type="text" id="txtSubDescription" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="txtController">Acción <span class="Required">*</span></label>
                    <input type="text" id="txtAction" class="form-control" />
                </div>
                <div class="form-group form-check form-switch">
                    <label>Estatus <span class="Required">*</span></label>
                    <input type="checkbox" id="chkStatusS" class="form-check-input" />
                    <label class="form-check-label" for="chkStatus">Activo/Inactivo)</label>
                </div>
                <div class="form-group">
                    <label for="txtPosition">Posición <span class="Required">*</span></label>
                    <input type="number" id="txtSubPosition" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="txtRDate">Fecha <span class="Required">*</span></label>
                    <input type="datetime-local" id="txtSubRDate" class="form-control" />
                </div>
                <div class="form-group">
                    <label>Modulo</label>
                    <select class="form-control" id="listModulo">
                        <option value="-1">Seleccione</option>
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="btnSaveSubModule">Guardar Cambios</button>
            </div>
        </div>
    </div>
</div>

@section JS {

    <script>
        cargarSubModulo();

        cargarModulos();

        $("#btnSubModule").click(function () {
            LimpiarFormularioSubModule();
            $("#modalSubModule").modal("show");
        });

        $("#btnSaveSubModule").click(function () {
            const dateValue = $("#txtSubRDate").val();
            const data_submodule = {
                subModuleID: $("#_id_submodule_").val(),
                subDescription: $("#txtSubDescription").val(),
                subAction: $("#txtAction").val(),
                subStatus: $("#chkStatusS").is(":checked") ? 1 : 0,
                subPosition: $("#txtSubPosition").val(),
                subRDate: dateValue ? new Date(dateValue).toISOString() : null,
                moduleID: $("#listModulo").val(),
            };

            $.ajax({
                url: "/Submodule/AddUpdate",
                data: data_submodule,
                type: "POST",
                beforeSend: () => { },
                success: function (res) {
                    if (res.ok) {
                        mostrarToast("Exito", res.messege, "success");
                        cargarSubModulo();
                        $("#modalSubModule").modal("hide");
                        LimpiarFormularioSubModule();
                    } else {
                        mostrarToast("Error", res.messege, "error");
                    }
                },
                error: function () {
                    alert("Ocurrió un error interno, por favor inténtalo más tarde");
                }
            });
        });

        function ShowModalSubEdit(_submoduleID) {
            const data_submodule_id = { subModuleID: _submoduleID };
            $.ajax({
                url: "/SubModule/ListSubModule",
                data: data_submodule_id,
                type: "POST",
                success: function (res) {
                    if (res.ok) {
                        const submodule = res.data[0];
                        $("#_id_submodule_").val(submodule.subModuleID);
                        $("#txtSubDescription").val(submodule.subDescription);
                        $("#txtAction").val(submodule.subAction);
                        $("#chkStatusS").prop("checked", submodule.subStatus);
                        $("#txtSubPosition").val(submodule.subPosition);
                        let subRDate = submodule.subRDate;
                        let timestampMatch = subRDate.match(/\/Date\((\d+)\)\//);
                        if (timestampMatch) {
                            let timestamp = parseInt(timestampMatch[1], 10);
                            let date = new Date(timestamp);
                            let isoDate = date.toISOString().slice(0, 16);
                            $("#txtSubRDate").val(isoDate);
                        } else {
                            let date = new Date(subRDate);
                            if (!isNaN(date.getTime())) {
                                let isoDate = date.toISOString().slice(0, 16);
                                $("#txtSubRDate").val(isoDate);
                            } else {
                                $("#txtSubRDate").val('');
                            }
                        }
                        $("#listModulo").val(submodule.moduleID);
                        $("#modalSubModule").modal("show");
                    } else {
                       mostrarToast("Error", res.messege, "error");
                    }
                },
                error: function () {
                    alert("Ocurrió un error interno, por favor inténtalo más tarde");
                }
            });
        }

        function cargarSubModulo() {
            $.ajax({
                url: "/SubModule/ListSubModule",
                type: "POST",
                dataType: "JSON",
                contentType: "application/json; charset=utf-8;",
                beforeSend: () => { },
                success: function (res) {
                    if (res.ok) {
                        LlenarTablaS(res.data);
                        let html = `<option value="-1">Seleccione</option>`;
                        $.each(res.data, (index, value) => {
                            html += `<option value="${value.subModuleID}">${value.subDescription}</option>`;
                        });
                        $("#listSubModulo").html(html);
                    } else {
                        mostrarToast("Error", res.messege, "error");
                    }
                },
                error: function () {
                    alert("Ocurrió un error interno, por favor inténtalo más tarde");
                }
            });
        }

        function cargarModulos() {
            $.ajax({
                url: "/Module/ListModule",
                type: "POST",
                dataType: "JSON",
                contentType: "application/json; charset=utf-8",
                success: function (res) {
                    if (res.ok) {
                        console.log(res.data);
                        let html = `<option value="-1">Seleccione</option>`;
                        $.each(res.data, (index, value) => {
                            html += `<option value="${value.moduleID}">${value.moDescription}</option>`;
                        });
                        $("#listModulo").html(html);
                    } else {
                        mostrarToast("Error", res.messege, "error");
                    }
                },
                error: function () {
                    alert("Ocurrió un error interno, por favor inténtalo más tarde");
                }
            });
        }

        function LlenarTablaS(lista) {
            if ($.fn.DataTable.isDataTable("#tmain")) {
                $("#tmain").DataTable().destroy();
            }

            $("#tmainM tbody").remove();

            tabla = $("#tmain").DataTable({
                data: lista,
                columns: [
                    { data: "subDescription" },
                    { data: "subAction" },
                    { data: "subStatus" },
                    { data: "subPosition" },
                    {
                        data: "subRDate", render: function (data) {

                            if (data) {
                                let timestampMatch = data.match(/\/Date\((\d+)\)\//);
                                if (timestampMatch) {
                                    let timestamp = parseInt(timestampMatch[1], 10);
                                    let date = new Date(timestamp);
                                    return date.toLocaleString('es-ES', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false });
                                } else {
                                    let date = new Date(data);
                                    if (isNaN(date.getTime())) {
                                        let parts = data.split(/[-T:.Z]/);
                                        date = new Date(Date.UTC(parts[0], parts[1] - 1, parts[2], parts[3] || 0, parts[4] || 0, parts[5] || 0));
                                    }
                                    return !isNaN(date.getTime()) ? date.toLocaleString('es-ES', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false }) : 'Fecha inválida';
                                }
                            } else {
                                return '';
                            }
                        }
                    },
                    { data: "moduleID" },
                    {
                        data: "subModuleID",
                        render: (value, type, row) => {
                            return `<td class="text-end">
                <div class="dropdown font-sans-serif position-static"><button class="btn btn-link text-600 btn-sm dropdown-toggle btn-reveal" type="button" data-bs-toggle="dropdown" data-boundary="window" aria-haspopup="true" aria-expanded="false"><span class="fas fa-ellipsis-h fs-10"></span></button>
                    <div class="dropdown-menu dropdown-menu-end border py-0">
                      <div class="py-2"><a class="dropdown-item" onclick="ShowModalSubEdit(${value});" href="#">Edit</a><a class="dropdown-item text-danger" href="#!">Delete</a></div>
                    </div>
                  </div>
                </td>`;
                        }
                    }
                ],
                    language: {
                        url: 'https://cdn.datatables.net/plug-ins/1.10.24/i18n/Spanish.json'
                    },
                    dom: 'Bfrtip',
                    buttons: [
                        {
                            extend: 'excelHtml5',
                            text: '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-file-earmark-excel" viewBox="0 0 16 16"><path d="M5.884 6.68 8 8.8l2.116-2.12 1.768 1.764L9.768 10.56 12 12.8l-2.232 2.236L8 13.72l-2.116 2.12-1.768-1.764L6.232 10.56 4 8.32l2.232-2.236 1.652 1.596zm6.16-1.78 1.48-1.48a.5.5 0 0 1 .7 0 .5.5 0 0 1 0 .7l-1.48 1.48L8 13.8 4 9.8l4-4L12.04 6.9zm.86-1.32a.5.5 0 0 1 0-.7l1.48-1.48a.5.5 0 0 1 .7 0 .5.5 0 0 1 0 .7l-1.48 1.48-1.48 1.48a.5.5 0 0 1-.7 0 .5.5 0 0 1 0-.7l1.48-1.48-1.48-1.48z"/></svg> Excel',
                            className: 'btn btn-dark-green btn-sm',
                            title: 'Tabla Submódulo',
                            action: function (e, dt, button, config) {
                                $.fn.dataTable.ext.buttons.excelHtml5.action.call(this, e, dt, button, config);
                                mostrarToast("Exito", "La tabla ha sido exportada a Excel.", "success");
                            }
                        }
                    ]
                });
            }

        function LimpiarFormularioSubModule() {
            $("#_id_submodule_").val(0);
            $("#txtSubDescription").val("");
            $("#txtAction").val("");
            $("#txtSubPosition").val("");
            $("#txtSubRDate").val("");
            $("#listModulo").val("-1");
        }

        function mostrarToast(titulo, mensaje, tipo) {

            let icon = '';
            if (tipo === 'success') {
                icon = '<span class="fas fa-check-circle text-white fs-6"></span>';
            } else if (tipo === 'error') {
                icon = '<span class="fas fa-times-circle text-white fs-6"></span>';
            } else if (tipo === 'warning') {
                icon = '<span class="fas fa-exclamation-circle text-white fs-6"></span>';
            } else if (tipo === 'info') {
                icon = '<span class="fas fa-info-circle text-white fs-6"></span>';
            }

            const alert = `
            <div class="alert alert-${tipo} border-0 d-flex align-items-center" role="alert">
                <div class="bg-${tipo} me-3 icon-item">${icon}</div>
                <p class="mb-0 flex-1">${titulo} ${mensaje}</p>
                <button class="btn-close" type="button" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>`;

            $("#Alert").html(alert);

            $(".alert").toast("show");

            setTimeout(() => {
                $(".alert").alert('close');
            }, 4000);
        }
    </script>
}
