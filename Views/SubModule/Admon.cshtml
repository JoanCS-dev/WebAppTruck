@{
    ViewData["Title"] = "SubModule";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.0/css/bootstrap.min.css" />
<link rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.10.0/font/bootstrap-icons.min.css">

<style>
    .btn-dark-green {
        background-color: #217346;
        border-color: #217346;
        color: white;
        margin-left: 950px;
    }

    .btn-dark-green:hover {
        background-color: #1e623d;
        border-color: #1e623d;
        color: white;
    }
</style>

<div class="card">
    <div class="card-body">
        <div class="table-responsive scrollbar">
            <div class="m-3">
                <button type="button" class="btn btn-info btn-sm" id="btnSubModule">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor"
                        class="bi bi-box-seam" viewBox="0 0 16 16">
                        <path
                            d="M7.293 0.293a1 1 0 0 1 1.414 0l6 6a1 1 0 0 1-1.414 1.414L8 2.414 2.707 7.707a1 1 0 0 1-1.414-1.414l6-6z" />
                        <path
                            d="M0 9a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v7a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V9zm13 0H3v7h10V9z" />
                    </svg>
                    Submódulo
                </button>
                <button type="button" class="btn btn-dark-green btn-sm btn-excel my-3 "
                    onclick="exportExcel('tmain', 'Tabla Submodulo')" data-toggle="tooltip" data-placement="top"
                    title="Exportar a Excel">
                    <i class="bi bi-file-earmark-excel-fill"></i> Excel
                </button>
            </div>
            <table class="table table-striped table-hover display nowrap" id="tmain">
                <thead>
                    <tr>
                        <td>Descripción</td>
                        <td>Acción</td>
                        <td>Estatus</td>
                        <td>Posición</td>
                        <td>Fecha</td>
                        <td>Módulo</td>
                        <td>Acciones</td>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="modal fade" tabindex="-1" id="modalSubModule">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">SubMódulo</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="txtDescription">Descripción</label>
                    <input type="hidden" id="_id_submodule_" value="0" />
                    <input type="text" id="txtSubDescription" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="txtController">Acción</label>
                    <input type="text" id="txtAction" class="form-control" />
                </div>
                <div class="form-group form-check form-switch">
                    <label>Estatus</label>
                    <input type="checkbox" id="chkStatusS" class="form-check-input" />
                    <label class="form-check-label" for="chkStatus">Activo/Inactivo)</label>
                </div>
                <div class="form-group">
                    <label for="txtPosition">Posición</label>
                    <input type="number" id="txtSubPosition" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="txtRDate">Fecha</label>
                    <input type="datetime-local" id="txtSubRDate" class="form-control" />
                </div>
                <div class="form-group">
                    <label>Modulo</label>
                    <select class="form-control" id="listModulo">
                        <option value="-1">Seleccione</option>
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="btnSaveSubModule">Guardar Cambios</button>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.datatables.net/1.10.24/js/jquery.dataTables.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.4/xlsx.full.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js"></script>

@section JS {
    <script>
        cargarSubModulo();

        cargarModulos();

        $("#btnSubModule").click(function () {
            LimpiarFormularioSubModule();
            $("#modalSubModule").modal("show");
        });

        $("#btnSaveSubModule").click(function () {
            const dateValue = $("#txtSubRDate").val();
            const data_submodule = {
                subModuleID: $("#_id_submodule_").val(),
                subDescription: $("#txtSubDescription").val(),
                subAction: $("#txtAction").val(),
                subStatus: $("#chkStatusS").is(":checked") ? 1 : 0,
                subPosition: $("#txtSubPosition").val(),
                subRDate: dateValue ? new Date(dateValue).toISOString() : null,
                moduleID: $("#listModulo").val(),
            };

            $.ajax({
                url: "/Submodule/AddUpdate",
                data: data_submodule,
                type: "POST",
                beforeSend: () => { },
                success: function (res) {
                    if (res.ok) {
                        alert(res.message);
                        cargarSubModulo();
                        $("#modalSubModule").modal("hide");
                        LimpiarFormularioSubModule();
                    } else {
                        alert(res.message);
                    }
                },
                error: function () {
                    alert("Ocurrió un error interno, por favor inténtalo más tarde");
                }
            });
        });

        function ShowModalSubEdit(_submoduleID) {
            const data_submodule_id = { subModuleID: _submoduleID };
            $.ajax({
                url: "/SubModule/ListSubModule",
                data: data_submodule_id,
                type: "POST",
                success: function (res) {
                    if (res.ok) {
                        const submodule = res.data[0];
                        $("#_id_submodule_").val(submodule.subModuleID);
                        $("#txtSubDescription").val(submodule.subDescription);
                        $("#txtAction").val(submodule.subAction);
                        $("#chkStatusS").prop("checked", submodule.subStatus);
                        $("#txtSubPosition").val(submodule.subPosition);
                        let subRDate = submodule.subRDate;
                        let timestampMatch = subRDate.match(/\/Date\((\d+)\)\//);
                        if (timestampMatch) {
                            let timestamp = parseInt(timestampMatch[1], 10);
                            let date = new Date(timestamp);
                            let isoDate = date.toISOString().slice(0, 16);
                            $("#txtSubRDate").val(isoDate);
                        } else {
                            let date = new Date(subRDate);
                            if (!isNaN(date.getTime())) {
                                let isoDate = date.toISOString().slice(0, 16);
                                $("#txtSubRDate").val(isoDate);
                            } else {
                                $("#txtSubRDate").val('');
                            }
                        }
                        $("#listModulo").val(submodule.moduleID);
                        $("#modalSubModule").modal("show");
                    } else {
                        alert(res.message);
                    }
                },
                error: function () {
                    alert("Ocurrió un error interno, por favor inténtalo más tarde");
                }
            });
        }

        function cargarSubModulo() {
            $.ajax({
                url: "/SubModule/ListSubModule",
                type: "POST",
                dataType: "JSON",
                contentType: "application/json; charset=utf-8;",
                beforeSend: () => { },
                success: function (res) {
                    if (res.ok) {
                        LlenarTablaS(res.data);
                        let html = `<option value="-1">Seleccione</option>`;
                        $.each(res.data, (index, value) => {
                            html += `<option value="${value.subModuleID}">${value.subDescription}</option>`;
                        });
                        $("#listSubModulo").html(html);
                    } else {
                        alert(res.message);
                    }
                },
                error: function () {
                    alert("Ocurrió un error interno, por favor inténtalo más tarde");
                }
            });
        }

        function cargarModulos() {
            $.ajax({
                url: "/Module/ListModule",
                type: "POST",
                dataType: "JSON",
                contentType: "application/json; charset=utf-8",
                success: function (res) {
                    if (res.ok) {
                        console.log(res.data);
                        let html = `<option value="-1">Seleccione</option>`;
                        $.each(res.data, (index, value) => {
                            html += `<option value="${value.moduleID}">${value.moDescription}</option>`;
                        });
                        $("#listModulo").html(html);
                    } else {
                        alert(res.message);
                    }
                },
                error: function () {
                    alert("Ocurrió un error interno, por favor inténtalo más tarde");
                }
            });
        }

        function LlenarTablaS(lista) {
            if ($.fn.DataTable.isDataTable("#tmain")) {
                $("#tmain").DataTable().destroy();
            }

            $("#tmainM tbody").remove();

            tabla = $("#tmain").DataTable({
                data: lista,
                columns: [
                    { data: "subDescription" },
                    { data: "subAction" },
                    { data: "subStatus" },
                    { data: "subPosition" },
                    {
                        data: "subRDate", render: function (data) {

                            if (data) {
                                let timestampMatch = data.match(/\/Date\((\d+)\)\//);
                                if (timestampMatch) {
                                    let timestamp = parseInt(timestampMatch[1], 10);
                                    let date = new Date(timestamp);
                                    return date.toLocaleString('es-ES', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false });
                                } else {
                                    let date = new Date(data);
                                    if (isNaN(date.getTime())) {
                                        let parts = data.split(/[-T:.Z]/);
                                        date = new Date(Date.UTC(parts[0], parts[1] - 1, parts[2], parts[3] || 0, parts[4] || 0, parts[5] || 0));
                                    }
                                    return !isNaN(date.getTime()) ? date.toLocaleString('es-ES', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false }) : 'Fecha inválida';
                                }
                            } else {
                                return '';
                            }
                        }
                    },
                    { data: "moduleID" },
                    {
                        data: "subModuleID",
                        render: (value, type, row) => {
                            return `<button type='button' class='btn btn-warning m-1' onclick="ShowModalSubEdit(${value});">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                                                <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
                                                <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z"/>
                                            </svg>
                                        </button>`;
                        }
                    }
                ],
                language: {
                    url: 'https://cdn.datatables.net/plug-ins/1.10.24/i18n/Spanish.json'
                }
            });
        }

        function LimpiarFormularioSubModule() {
            $("#_id_submodule_").val(0);
            $("#txtSubDescription").val("");
            $("#txtAction").val("");
            $("#txtSubPosition").val("");
            $("#txtSubRDate").val("");
            $("#listModulo").val("-1");
        }

        function exportExcel(tableID, filename = '') {
            let table = document.getElementById(tableID);
            let wb = XLSX.utils.table_to_book(table, { sheet: "Sheet1" });

            let wbout = XLSX.write(wb, { bookType: 'xlsx', type: 'binary' });

            function s2ab(s) {
                let buf = new ArrayBuffer(s.length);
                let view = new Uint8Array(buf);
                for (let i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;
                return buf;
            }

            saveAs(new Blob([s2ab(wbout)], { type: "application/octet-stream" }), filename + ".xlsx");
        }

    </script>
}
